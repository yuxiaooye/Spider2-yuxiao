{
    "table_name": "sample_contents",
    "table_fullname": "spider2-public-data.github_repos.sample_contents",
    "column_names": [
        "id",
        "size",
        "content",
        "binary",
        "copies",
        "sample_repo_name",
        "sample_ref",
        "sample_path",
        "sample_mode",
        "sample_symlink_target"
    ],
    "column_types": [
        "STRING",
        "INT64",
        "STRING",
        "BOOL",
        "INT64",
        "STRING",
        "STRING",
        "STRING",
        "INT64",
        "STRING"
    ],
    "nested_column_names": [
        "id",
        "size",
        "content",
        "binary",
        "copies",
        "sample_repo_name",
        "sample_ref",
        "sample_path",
        "sample_mode",
        "sample_symlink_target"
    ],
    "nested_column_types": [
        "STRING",
        "INT64",
        "STRING",
        "BOOL",
        "INT64",
        "STRING",
        "STRING",
        "STRING",
        "INT64",
        "STRING"
    ],
    "description": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    "sample_rows": [
        {
            "id": "2dd586a19b594a73e9c6f7485d1e5da9203a4467",
            "size": 21447,
            "content": "/*\n * rtc-ds1305.c -- driver for DS1305 and DS1306 SPI RTC chips\n *\n * Copyright (C) 2008 David Brownell\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n */\n#include <linux/kernel.h>\n#include <linux/init.h>\n#include <linux/bcd.h>\n#include <linux/slab.h>\n#include <linux/rtc.h>\n#include <linux/workqueue.h>\n\n#include <linux/spi/spi.h>\n#include <linux/spi/ds1305.h>\n#include <linux/module.h>\n\n\n/*\n * Registers ... mask DS1305_WRITE into register address to write,\n * otherwise you're reading it.  All non-bitmask values are BCD.\n */\n#define DS1305_WRITE\t\t0x80\n\n\n/* RTC date/time ... the main special cases are that we:\n *  - Need fancy \"hours\" encoding in 12hour mode\n *  - Don't rely on the \"day-of-week\" field (or tm_wday)\n *  - Are a 21st-century clock (2000 <= year < 2100)\n */\n#define DS1305_RTC_LEN\t\t7\t\t/* bytes for RTC regs */\n\n#define DS1305_SEC\t\t0x00\t\t/* register addresses */\n#define DS1305_MIN\t\t0x01\n#define DS1305_HOUR\t\t0x02\n#\tdefine DS1305_HR_12\t\t0x40\t/* set == 12 hr mode */\n#\tdefine DS1305_HR_PM\t\t0x20\t/* set == PM (12hr mode) */\n#define DS1305_WDAY\t\t0x03\n#define DS1305_MDAY\t\t0x04\n#define DS1305_MON\t\t0x05\n#define DS1305_YEAR\t\t0x06\n\n\n/* The two alarms have only sec/min/hour/wday fields (ALM_LEN).\n * DS1305_ALM_DISABLE disables a match field (some combos are bad).\n *\n * NOTE that since we don't use WDAY, we limit ourselves to alarms\n * only one day into the future (vs potentially up to a week).\n *\n * NOTE ALSO that while we could generate once-a-second IRQs (UIE), we\n * don't currently support them.  We'd either need to do it only when\n * no alarm is pending (not the standard model), or to use the second\n * alarm (implying that this is a DS1305 not DS1306, *and* that either\n * it's wired up a second IRQ we know, or that INTCN is set)\n */\n#define DS1305_ALM_LEN\t\t4\t\t/* bytes for ALM regs */\n#define DS1305_ALM_DISABLE\t0x80\n\n#define DS1305_ALM0(r)\t\t(0x07 + (r))\t/* register addresses */\n#define DS1305_ALM1(r)\t\t(0x0b + (r))\n\n\n/* three control registers */\n#define DS1305_CONTROL_LEN\t3\t\t/* bytes of control regs */\n\n#define DS1305_CONTROL\t\t0x0f\t\t/* register addresses */\n#\tdefine DS1305_nEOSC\t\t0x80\t/* low enables oscillator */\n#\tdefine DS1305_WP\t\t0x40\t/* write protect */\n#\tdefine DS1305_INTCN\t\t0x04\t/* clear == only int0 used */\n#\tdefine DS1306_1HZ\t\t0x04\t/* enable 1Hz output */\n#\tdefine DS1305_AEI1\t\t0x02\t/* enable ALM1 IRQ */\n#\tdefine DS1305_AEI0\t\t0x01\t/* enable ALM0 IRQ */\n#define DS1305_STATUS\t\t0x10\n/* status has just AEIx bits, mirrored as IRQFx */\n#define DS1305_TRICKLE\t\t0x11\n/* trickle bits are defined in <linux/spi/ds1305.h> */\n\n/* a bunch of NVRAM */\n#define DS1305_NVRAM_LEN\t96\t\t/* bytes of NVRAM */\n\n#define DS1305_NVRAM\t\t0x20\t\t/* register addresses */\n\n\nstruct ds1305 {\n\tstruct spi_device\t*spi;\n\tstruct rtc_device\t*rtc;\n\n\tstruct work_struct\twork;\n\n\tunsigned long\t\tflags;\n#define FLAG_EXITING\t0\n\n\tbool\t\t\thr12;\n\tu8\t\t\tctrl[DS1305_CONTROL_LEN];\n};\n\n\n/*----------------------------------------------------------------------*/\n\n/*\n * Utilities ...  tolerate 12-hour AM/PM notation in case of non-Linux\n * software (like a bootloader) which may require it.\n */\n\nstatic unsigned bcd2hour(u8 bcd)\n{\n\tif (bcd & DS1305_HR_12) {\n\t\tunsigned\thour = 0;\n\n\t\tbcd &= ~DS1305_HR_12;\n\t\tif (bcd & DS1305_HR_PM) {\n\t\t\thour = 12;\n\t\t\tbcd &= ~DS1305_HR_PM;\n\t\t}\n\t\thour += bcd2bin(bcd);\n\t\treturn hour - 1;\n\t}\n\treturn bcd2bin(bcd);\n}\n\nstatic u8 hour2bcd(bool hr12, int hour)\n{\n\tif (hr12) {\n\t\thour++;\n\t\tif (hour <= 12)\n\t\t\treturn DS1305_HR_12 | bin2bcd(hour);\n\t\thour -= 12;\n\t\treturn DS1305_HR_12 | DS1305_HR_PM | bin2bcd(hour);\n\t}\n\treturn bin2bcd(hour);\n}\n\n/*----------------------------------------------------------------------*/\n\n/*\n * Interface to RTC framework\n */\n\nstatic int ds1305_alarm_irq_enable(struct device *dev, unsigned int enabled)\n{\n\tstruct ds1305\t*ds1305 = dev_get_drvdata(dev);\n\tu8\t\tbuf[2];\n\tlong\t\terr = -EINVAL;\n\n\tbuf[0] = DS1305_WRITE | DS1305_CONTROL;\n\tbuf[1] = ds1305->ctrl[0];\n\n\tif (enabled) {\n\t\tif (ds1305->ctrl[0] & DS1305_AEI0)\n\t\t\tgoto done;\n\t\tbuf[1] |= DS1305_AEI0;\n\t} else {\n\t\tif (!(buf[1] & DS1305_AEI0))\n\t\t\tgoto done;\n\t\tbuf[1] &= ~DS1305_AEI0;\n\t}\n\terr = spi_write_then_read(ds1305->spi, buf, sizeof(buf), NULL, 0);\n\tif (err >= 0)\n\t\tds1305->ctrl[0] = buf[1];\ndone:\n\treturn err;\n\n}\n\n\n/*\n * Get/set of date and time is pretty normal.\n */\n\nstatic int ds1305_get_time(struct device *dev, struct rtc_time *time)\n{\n\tstruct ds1305\t*ds1305 = dev_get_drvdata(dev);\n\tu8\t\taddr = DS1305_SEC;\n\tu8\t\tbuf[DS1305_RTC_LEN];\n\tint\t\tstatus;\n\n\t/* Use write-then-read to get all the date/time registers\n\t * since dma from stack is nonportable\n\t */\n\tstatus = spi_write_then_read(ds1305->spi, &addr, sizeof(addr),\n\t\t\tbuf, sizeof(buf));\n\tif (status < 0)\n\t\treturn status;\n\n\tdev_vdbg(dev, \"%s: %02x %02x %02x, %02x %02x %02x %02x\\n\",\n\t\t\"read\", buf[0], buf[1], buf[2], buf[3],\n\t\tbuf[4], buf[5], buf[6]);\n\n\t/* Decode the registers */\n\ttime->tm_sec = bcd2bin(buf[DS1305_SEC]);\n\ttime->tm_min = bcd2bin(buf[DS1305_MIN]);\n\ttime->tm_hour = bcd2hour(buf[DS1305_HOUR]);\n\ttime->tm_wday = buf[DS1305_WDAY] - 1;\n\ttime->tm_mday = bcd2bin(buf[DS1305_MDAY]);\n\ttime->tm_mon = bcd2bin(buf[DS1305_MON]) - 1;\n\ttime->tm_year = bcd2bin(buf[DS1305_YEAR]) + 100;\n\n\tdev_vdbg(dev, \"%s secs=%d, mins=%d, \"\n\t\t\"hours=%d, mday=%d, mon=%d, year=%d, wday=%d\\n\",\n\t\t\"read\", time->tm_sec, time->tm_min,\n\t\ttime->tm_hour, time->tm_mday,\n\t\ttime->tm_mon, time->tm_year, time->tm_wday);\n\n\t/* Time may not be set */\n\treturn rtc_valid_tm(time);\n}\n\nstatic int ds1305_set_time(struct device *dev, struct rtc_time *time)\n{\n\tstruct ds1305\t*ds1305 = dev_get_drvdata(dev);\n\tu8\t\tbuf[1 + DS1305_RTC_LEN];\n\tu8\t\t*bp = buf;\n\n\tdev_vdbg(dev, \"%s secs=%d, mins=%d, \"\n\t\t\"hours=%d, mday=%d, mon=%d, year=%d, wday=%d\\n\",\n\t\t\"write\", time->tm_sec, time->tm_min,\n\t\ttime->tm_hour, time->tm_mday,\n\t\ttime->tm_mon, time->tm_year, time->tm_wday);\n\n\t/* Write registers starting at the first time/date address. */\n\t*bp++ = DS1305_WRITE | DS1305_SEC;\n\n\t*bp++ = bin2bcd(time->tm_sec);\n\t*bp++ = bin2bcd(time->tm_min);\n\t*bp++ = hour2bcd(ds1305->hr12, time->tm_hour);\n\t*bp++ = (time->tm_wday < 7) ? (time->tm_wday + 1) : 1;\n\t*bp++ = bin2bcd(time->tm_mday);\n\t*bp++ = bin2bcd(time->tm_mon + 1);\n\t*bp++ = bin2bcd(time->tm_year - 100);\n\n\tdev_dbg(dev, \"%s: %02x %02x %02x, %02x %02x %02x %02x\\n\",\n\t\t\"write\", buf[1], buf[2], buf[3],\n\t\tbuf[4], buf[5], buf[6], buf[7]);\n\n\t/* use write-then-read since dma from stack is nonportable */\n\treturn spi_write_then_read(ds1305->spi, buf, sizeof(buf),\n\t\t\tNULL, 0);\n}\n\n/*\n * Get/set of alarm is a bit funky:\n *\n * - First there's the inherent raciness of getting the (partitioned)\n *   status of an alarm that could trigger while we're reading parts\n *   of that status.\n *\n * - Second there's its limited range (we could increase it a bit by\n *   relying on WDAY), which means it will easily roll over.\n *\n * - Third there's the choice of two alarms and alarm signals.\n *   Here we use ALM0 and expect that nINT0 (open drain) is used;\n *   that's the only real option for DS1306 runtime alarms, and is\n *   natural on DS1305.\n *\n * - Fourth, there's also ALM1, and a second interrupt signal:\n *     + On DS1305 ALM1 uses nINT1 (when INTCN=1) else nINT0;\n *     + On DS1306 ALM1 only uses INT1 (an active high pulse)\n *       and it won't work when VCC1 is active.\n *\n *   So to be most general, we should probably set both alarms to the\n *   same value, letting ALM1 be the wakeup event source on DS1306\n *   and handling several wiring options on DS1305.\n *\n * - Fifth, we support the polled mode (as well as possible; why not?)\n *   even when no interrupt line is wired to an IRQ.\n */\n\n/*\n * Context: caller holds rtc->ops_lock (to protect ds1305->ctrl)\n */\nstatic int ds1305_get_alarm(struct device *dev, struct rtc_wkalrm *alm)\n{\n\tstruct ds1305\t*ds1305 = dev_get_drvdata(dev);\n\tstruct spi_device *spi = ds1305->spi;\n\tu8\t\taddr;\n\tint\t\tstatus;\n\tu8\t\tbuf[DS1305_ALM_LEN];\n\n\t/* Refresh control register cache BEFORE reading ALM0 registers,\n\t * since reading alarm registers acks any pending IRQ.  That\n\t * makes returning \"pending\" status a bit of a lie, but that bit\n\t * of EFI status is at best fragile anyway (given IRQ handlers).\n\t */\n\taddr = DS1305_CONTROL;\n\tstatus = spi_write_then_read(spi, &addr, sizeof(addr),\n\t\t\tds1305->ctrl, sizeof(ds1305->ctrl));\n\tif (status < 0)\n\t\treturn status;\n\n\talm->enabled = !!(ds1305->ctrl[0] & DS1305_AEI0);\n\talm->pending = !!(ds1305->ctrl[1] & DS1305_AEI0);\n\n\t/* get and check ALM0 registers */\n\taddr = DS1305_ALM0(DS1305_SEC);\n\tstatus = spi_write_then_read(spi, &addr, sizeof(addr),\n\t\t\tbuf, sizeof(buf));\n\tif (status < 0)\n\t\treturn status;\n\n\tdev_vdbg(dev, \"%s: %02x %02x %02x %02x\\n\",\n\t\t\"alm0 read\", buf[DS1305_SEC], buf[DS1305_MIN],\n\t\tbuf[DS1305_HOUR], buf[DS1305_WDAY]);\n\n\tif ((DS1305_ALM_DISABLE & buf[DS1305_SEC])\n\t\t\t|| (DS1305_ALM_DISABLE & buf[DS1305_MIN])\n\t\t\t|| (DS1305_ALM_DISABLE & buf[DS1305_HOUR]))\n\t\treturn -EIO;\n\n\t/* Stuff these values into alm->time and let RTC framework code\n\t * fill in the rest ... and also handle rollover to tomorrow when\n\t * that's needed.\n\t */\n\talm->time.tm_sec = bcd2bin(buf[DS1305_SEC]);\n\talm->time.tm_min = bcd2bin(buf[DS1305_MIN]);\n\talm->time.tm_hour = bcd2hour(buf[DS1305_HOUR]);\n\talm->time.tm_mday = -1;\n\talm->time.tm_mon = -1;\n\talm->time.tm_year = -1;\n\t/* next three fields are unused by Linux */\n\talm->time.tm_wday = -1;\n\talm->time.tm_mday = -1;\n\talm->time.tm_isdst = -1;\n\n\treturn 0;\n}\n\n/*\n * Context: caller holds rtc->ops_lock (to protect ds1305->ctrl)\n */\nstatic int ds1305_set_alarm(struct device *dev, struct rtc_wkalrm *alm)\n{\n\tstruct ds1305\t*ds1305 = dev_get_drvdata(dev);\n\tstruct spi_device *spi = ds1305->spi;\n\tunsigned long\tnow, later;\n\tstruct rtc_time\ttm;\n\tint\t\tstatus;\n\tu8\t\tbuf[1 + DS1305_ALM_LEN];\n\n\t/* convert desired alarm to time_t */\n\tstatus = rtc_tm_to_time(&alm->time, &later);\n\tif (status < 0)\n\t\treturn status;\n\n\t/* Read current time as time_t */\n\tstatus = ds1305_get_time(dev, &tm);\n\tif (status < 0)\n\t\treturn status;\n\tstatus = rtc_tm_to_time(&tm, &now);\n\tif (status < 0)\n\t\treturn status;\n\n\t/* make sure alarm fires within the next 24 hours */\n\tif (later <= now)\n\t\treturn -EINVAL;\n\tif ((later - now) > 24 * 60 * 60)\n\t\treturn -EDOM;\n\n\t/* disable alarm if needed */\n\tif (ds1305->ctrl[0] & DS1305_AEI0) {\n\t\tds1305->ctrl[0] &= ~DS1305_AEI0;\n\n\t\tbuf[0] = DS1305_WRITE | DS1305_CONTROL;\n\t\tbuf[1] = ds1305->ctrl[0];\n\t\tstatus = spi_write_then_read(ds1305->spi, buf, 2, NULL, 0);\n\t\tif (status < 0)\n\t\t\treturn status;\n\t}\n\n\t/* write alarm */\n\tbuf[0] = DS1305_WRITE | DS1305_ALM0(DS1305_SEC);\n\tbuf[1 + DS1305_SEC] = bin2bcd(alm->time.tm_sec);\n\tbuf[1 + DS1305_MIN] = bin2bcd(alm->time.tm_min);\n\tbuf[1 + DS1305_HOUR] = hour2bcd(ds1305->hr12, alm->time.tm_hour);\n\tbuf[1 + DS1305_WDAY] = DS1305_ALM_DISABLE;\n\n\tdev_dbg(dev, \"%s: %02x %02x %02x %02x\\n\",\n\t\t\"alm0 write\", buf[1 + DS1305_SEC], buf[1 + DS1305_MIN],\n\t\tbuf[1 + DS1305_HOUR], buf[1 + DS1305_WDAY]);\n\n\tstatus = spi_write_then_read(spi, buf, sizeof(buf), NULL, 0);\n\tif (status < 0)\n\t\treturn status;\n\n\t/* enable alarm if requested */\n\tif (alm->enabled) {\n\t\tds1305->ctrl[0] |= DS1305_AEI0;\n\n\t\tbuf[0] = DS1305_WRITE | DS1305_CONTROL;\n\t\tbuf[1] = ds1305->ctrl[0];\n\t\tstatus = spi_write_then_read(ds1305->spi, buf, 2, NULL, 0);\n\t}\n\n\treturn status;\n}\n\n#ifdef CONFIG_PROC_FS\n\nstatic int ds1305_proc(struct device *dev, struct seq_file *seq)\n{\n\tstruct ds1305\t*ds1305 = dev_get_drvdata(dev);\n\tchar\t\t*diodes = \"no\";\n\tchar\t\t*resistors = \"\";\n\n\t/* ctrl[2] is treated as read-only; no locking needed */\n\tif ((ds1305->ctrl[2] & 0xf0) == DS1305_TRICKLE_MAGIC) {\n\t\tswitch (ds1305->ctrl[2] & 0x0c) {\n\t\tcase DS1305_TRICKLE_DS2:\n\t\t\tdiodes = \"2 diodes, \";\n\t\t\tbreak;\n\t\tcase DS1305_TRICKLE_DS1:\n\t\t\tdiodes = \"1 diode, \";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tgoto done;\n\t\t}\n\t\tswitch (ds1305->ctrl[2] & 0x03) {\n\t\tcase DS1305_TRICKLE_2K:\n\t\t\tresistors = \"2k Ohm\";\n\t\t\tbreak;\n\t\tcase DS1305_TRICKLE_4K:\n\t\t\tresistors = \"4k Ohm\";\n\t\t\tbreak;\n\t\tcase DS1305_TRICKLE_8K:\n\t\t\tresistors = \"8k Ohm\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tdiodes = \"no\";\n\t\t\tbreak;\n\t\t}\n\t}\n\ndone:\n\treturn seq_printf(seq,\n\t\t\t\"trickle_charge\\t: %s%s\\n\",\n\t\t\tdiodes, resistors);\n}\n\n#else\n#define ds1305_proc\tNULL\n#endif\n\nstatic const struct rtc_class_ops ds1305_ops = {\n\t.read_time\t= ds1305_get_time,\n\t.set_time\t= ds1305_set_time,\n\t.read_alarm\t= ds1305_get_alarm,\n\t.set_alarm\t= ds1305_set_alarm,\n\t.proc\t\t= ds1305_proc,\n\t.alarm_irq_enable = ds1305_alarm_irq_enable,\n};\n\nstatic void ds1305_work(struct work_struct *work)\n{\n\tstruct ds1305\t*ds1305 = container_of(work, struct ds1305, work);\n\tstruct mutex\t*lock = &ds1305->rtc->ops_lock;\n\tstruct spi_device *spi = ds1305->spi;\n\tu8\t\tbuf[3];\n\tint\t\tstatus;\n\n\t/* lock to protect ds1305->ctrl */\n\tmutex_lock(lock);\n\n\t/* Disable the IRQ, and clear its status ... for now, we \"know\"\n\t * that if more than one alarm is active, they're in sync.\n\t * Note that reading ALM data registers also clears IRQ status.\n\t */\n\tds1305->ctrl[0] &= ~(DS1305_AEI1 | DS1305_AEI0);\n\tds1305->ctrl[1] = 0;\n\n\tbuf[0] = DS1305_WRITE | DS1305_CONTROL;\n\tbuf[1] = ds1305->ctrl[0];\n\tbuf[2] = 0;\n\n\tstatus = spi_write_then_read(spi, buf, sizeof(buf),\n\t\t\tNULL, 0);\n\tif (status < 0)\n\t\tdev_dbg(&spi->dev, \"clear irq --> %d\\n\", status);\n\n\tmutex_unlock(lock);\n\n\tif (!test_bit(FLAG_EXITING, &ds1305->flags))\n\t\tenable_irq(spi->irq);\n\n\trtc_update_irq(ds1305->rtc, 1, RTC_AF | RTC_IRQF);\n}\n\n/*\n * This \"real\" IRQ handler hands off to a workqueue mostly to allow\n * mutex locking for ds1305->ctrl ... unlike I2C, we could issue async\n * I/O requests in IRQ context (to clear the IRQ status).\n */\nstatic irqreturn_t ds1305_irq(int irq, void *p)\n{\n\tstruct ds1305\t\t*ds1305 = p;\n\n\tdisable_irq(irq);\n\tschedule_work(&ds1305->work);\n\treturn IRQ_HANDLED;\n}\n\n/*----------------------------------------------------------------------*/\n\n/*\n * Interface for NVRAM\n */\n\nstatic void msg_init(struct spi_message *m, struct spi_transfer *x,\n\t\tu8 *addr, size_t count, char *tx, char *rx)\n{\n\tspi_message_init(m);\n\tmemset(x, 0, 2 * sizeof(*x));\n\n\tx->tx_buf = addr;\n\tx->len = 1;\n\tspi_message_add_tail(x, m);\n\n\tx++;\n\n\tx->tx_buf = tx;\n\tx->rx_buf = rx;\n\tx->len = count;\n\tspi_message_add_tail(x, m);\n}\n\nstatic ssize_t\nds1305_nvram_read(struct file *filp, struct kobject *kobj,\n\t\tstruct bin_attribute *attr,\n\t\tchar *buf, loff_t off, size_t count)\n{\n\tstruct spi_device\t*spi;\n\tu8\t\t\taddr;\n\tstruct spi_message\tm;\n\tstruct spi_transfer\tx[2];\n\tint\t\t\tstatus;\n\n\tspi = container_of(kobj, struct spi_device, dev.kobj);\n\n\tif (unlikely(off >= DS1305_NVRAM_LEN))\n\t\treturn 0;\n\tif (count >= DS1305_NVRAM_LEN)\n\t\tcount = DS1305_NVRAM_LEN;\n\tif ((off + count) > DS1305_NVRAM_LEN)\n\t\tcount = DS1305_NVRAM_LEN - off;\n\tif (unlikely(!count))\n\t\treturn count;\n\n\taddr = DS1305_NVRAM + off;\n\tmsg_init(&m, x, &addr, count, NULL, buf);\n\n\tstatus = spi_sync(spi, &m);\n\tif (status < 0)\n\t\tdev_err(&spi->dev, \"nvram %s error %d\\n\", \"read\", status);\n\treturn (status < 0) ? status : count;\n}\n\nstatic ssize_t\nds1305_nvram_write(struct file *filp, struct kobject *kobj,\n\t\tstruct bin_attribute *attr,\n\t\tchar *buf, loff_t off, size_t count)\n{\n\tstruct spi_device\t*spi;\n\tu8\t\t\taddr;\n\tstruct spi_message\tm;\n\tstruct spi_transfer\tx[2];\n\tint\t\t\tstatus;\n\n\tspi = container_of(kobj, struct spi_device, dev.kobj);\n\n\tif (unlikely(off >= DS1305_NVRAM_LEN))\n\t\treturn -EFBIG;\n\tif (count >= DS1305_NVRAM_LEN)\n\t\tcount = DS1305_NVRAM_LEN;\n\tif ((off + count) > DS1305_NVRAM_LEN)\n\t\tcount = DS1305_NVRAM_LEN - off;\n\tif (unlikely(!count))\n\t\treturn count;\n\n\taddr = (DS1305_WRITE | DS1305_NVRAM) + off;\n\tmsg_init(&m, x, &addr, count, buf, NULL);\n\n\tstatus = spi_sync(spi, &m);\n\tif (status < 0)\n\t\tdev_err(&spi->dev, \"nvram %s error %d\\n\", \"write\", status);\n\treturn (status < 0) ? status : count;\n}\n\nstatic struct bin_attribute nvram = {\n\t.attr.name\t= \"nvram\",\n\t.attr.mode\t= S_IRUGO | S_IWUSR,\n\t.read\t\t= ds1305_nvram_read,\n\t.write\t\t= ds1305_nvram_write,\n\t.size\t\t= DS1305_NVRAM_LEN,\n};\n\n/*----------------------------------------------------------------------*/\n\n/*\n * Interface to SPI stack\n */\n\nstatic int ds1305_probe(struct spi_device *spi)\n{\n\tstruct ds1305\t\t\t*ds1305;\n\tint\t\t\t\tstatus;\n\tu8\t\t\t\taddr, value;\n\tstruct ds1305_platform_data\t*pdata = dev_get_platdata(&spi->dev);\n\tbool\t\t\t\twrite_ctrl = false;\n\n\t/* Sanity check board setup data.  This may be hooked up\n\t * in 3wire mode, but we don't care.  Note that unless\n\t * there's an inverter in place, this needs SPI_CS_HIGH!\n\t */\n\tif ((spi->bits_per_word && spi->bits_per_word != 8)\n\t\t\t|| (spi->max_speed_hz > 2000000)\n\t\t\t|| !(spi->mode & SPI_CPHA))\n\t\treturn -EINVAL;\n\n\t/* set up driver data */\n\tds1305 = devm_kzalloc(&spi->dev, sizeof(*ds1305), GFP_KERNEL);\n\tif (!ds1305)\n\t\treturn -ENOMEM;\n\tds1305->spi = spi;\n\tspi_set_drvdata(spi, ds1305);\n\n\t/* read and cache control registers */\n\taddr = DS1305_CONTROL;\n\tstatus = spi_write_then_read(spi, &addr, sizeof(addr),\n\t\t\tds1305->ctrl, sizeof(ds1305->ctrl));\n\tif (status < 0) {\n\t\tdev_dbg(&spi->dev, \"can't %s, %d\\n\",\n\t\t\t\t\"read\", status);\n\t\treturn status;\n\t}\n\n\tdev_dbg(&spi->dev, \"ctrl %s: %3ph\\n\", \"read\", ds1305->ctrl);\n\n\t/* Sanity check register values ... partially compensating for the\n\t * fact that SPI has no device handshake.  A pullup on MISO would\n\t * make these tests fail; but not all systems will have one.  If\n\t * some register is neither 0x00 nor 0xff, a chip is likely there.\n\t */\n\tif ((ds1305->ctrl[0] & 0x38) != 0 || (ds1305->ctrl[1] & 0xfc) != 0) {\n\t\tdev_dbg(&spi->dev, \"RTC chip is not present\\n\");\n\t\treturn -ENODEV;\n\t}\n\tif (ds1305->ctrl[2] == 0)\n\t\tdev_dbg(&spi->dev, \"chip may not be present\\n\");\n\n\t/* enable writes if needed ... if we were paranoid it would\n\t * make sense to enable them only when absolutely necessary.\n\t */\n\tif (ds1305->ctrl[0] & DS1305_WP) {\n\t\tu8\t\tbuf[2];\n\n\t\tds1305->ctrl[0] &= ~DS1305_WP;\n\n\t\tbuf[0] = DS1305_WRITE | DS1305_CONTROL;\n\t\tbuf[1] = ds1305->ctrl[0];\n\t\tstatus = spi_write_then_read(spi, buf, sizeof(buf), NULL, 0);\n\n\t\tdev_dbg(&spi->dev, \"clear WP --> %d\\n\", status);\n\t\tif (status < 0)\n\t\t\treturn status;\n\t}\n\n\t/* on DS1305, maybe start oscillator; like most low power\n\t * oscillators, it may take a second to stabilize\n\t */\n\tif (ds1305->ctrl[0] & DS1305_nEOSC) {\n\t\tds1305->ctrl[0] &= ~DS1305_nEOSC;\n\t\twrite_ctrl = true;\n\t\tdev_warn(&spi->dev, \"SET TIME!\\n\");\n\t}\n\n\t/* ack any pending IRQs */\n\tif (ds1305->ctrl[1]) {\n\t\tds1305->ctrl[1] = 0;\n\t\twrite_ctrl = true;\n\t}\n\n\t/* this may need one-time (re)init */\n\tif (pdata) {\n\t\t/* maybe enable trickle charge */\n\t\tif (((ds1305->ctrl[2] & 0xf0) != DS1305_TRICKLE_MAGIC)) {\n\t\t\tds1305->ctrl[2] = DS1305_TRICKLE_MAGIC\n\t\t\t\t\t\t| pdata->trickle;\n\t\t\twrite_ctrl = true;\n\t\t}\n\n\t\t/* on DS1306, configure 1 Hz signal */\n\t\tif (pdata->is_ds1306) {\n\t\t\tif (pdata->en_1hz) {\n\t\t\t\tif (!(ds1305->ctrl[0] & DS1306_1HZ)) {\n\t\t\t\t\tds1305->ctrl[0] |= DS1306_1HZ;\n\t\t\t\t\twrite_ctrl = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (ds1305->ctrl[0] & DS1306_1HZ) {\n\t\t\t\t\tds1305->ctrl[0] &= ~DS1306_1HZ;\n\t\t\t\t\twrite_ctrl = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (write_ctrl) {\n\t\tu8\t\tbuf[4];\n\n\t\tbuf[0] = DS1305_WRITE | DS1305_CONTROL;\n\t\tbuf[1] = ds1305->ctrl[0];\n\t\tbuf[2] = ds1305->ctrl[1];\n\t\tbuf[3] = ds1305->ctrl[2];\n\t\tstatus = spi_write_then_read(spi, buf, sizeof(buf), NULL, 0);\n\t\tif (status < 0) {\n\t\t\tdev_dbg(&spi->dev, \"can't %s, %d\\n\",\n\t\t\t\t\t\"write\", status);\n\t\t\treturn status;\n\t\t}\n\n\t\tdev_dbg(&spi->dev, \"ctrl %s: %3ph\\n\", \"write\", ds1305->ctrl);\n\t}\n\n\t/* see if non-Linux software set up AM/PM mode */\n\taddr = DS1305_HOUR;\n\tstatus = spi_write_then_read(spi, &addr, sizeof(addr),\n\t\t\t\t&value, sizeof(value));\n\tif (status < 0) {\n\t\tdev_dbg(&spi->dev, \"read HOUR --> %d\\n\", status);\n\t\treturn status;\n\t}\n\n\tds1305->hr12 = (DS1305_HR_12 & value) != 0;\n\tif (ds1305->hr12)\n\t\tdev_dbg(&spi->dev, \"AM/PM\\n\");\n\n\t/* register RTC ... from here on, ds1305->ctrl needs locking */\n\tds1305->rtc = devm_rtc_device_register(&spi->dev, \"ds1305\",\n\t\t\t&ds1305_ops, THIS_MODULE);\n\tif (IS_ERR(ds1305->rtc)) {\n\t\tstatus = PTR_ERR(ds1305->rtc);\n\t\tdev_dbg(&spi->dev, \"register rtc --> %d\\n\", status);\n\t\treturn status;\n\t}\n\n\t/* Maybe set up alarm IRQ; be ready to handle it triggering right\n\t * away.  NOTE that we don't share this.  The signal is active low,\n\t * and we can't ack it before a SPI message delay.  We temporarily\n\t * disable the IRQ until it's acked, which lets us work with more\n\t * IRQ trigger modes (not all IRQ controllers can do falling edge).\n\t */\n\tif (spi->irq) {\n\t\tINIT_WORK(&ds1305->work, ds1305_work);\n\t\tstatus = devm_request_irq(&spi->dev, spi->irq, ds1305_irq,\n\t\t\t\t0, dev_name(&ds1305->rtc->dev), ds1305);\n\t\tif (status < 0) {\n\t\t\tdev_dbg(&spi->dev, \"request_irq %d --> %d\\n\",\n\t\t\t\t\tspi->irq, status);\n\t\t\treturn status;\n\t\t}\n\n\t\tdevice_set_wakeup_capable(&spi->dev, 1);\n\t}\n\n\t/* export NVRAM */\n\tstatus = sysfs_create_bin_file(&spi->dev.kobj, &nvram);\n\tif (status < 0) {\n\t\tdev_dbg(&spi->dev, \"register nvram --> %d\\n\", status);\n\t\treturn status;\n\t}\n\n\treturn 0;\n}\n\nstatic int ds1305_remove(struct spi_device *spi)\n{\n\tstruct ds1305 *ds1305 = spi_get_drvdata(spi);\n\n\tsysfs_remove_bin_file(&spi->dev.kobj, &nvram);\n\n\t/* carefully shut down irq and workqueue, if present */\n\tif (spi->irq) {\n\t\tset_bit(FLAG_EXITING, &ds1305->flags);\n\t\tdevm_free_irq(&spi->dev, spi->irq, ds1305);\n\t\tcancel_work_sync(&ds1305->work);\n\t}\n\n\treturn 0;\n}\n\nstatic struct spi_driver ds1305_driver = {\n\t.driver.name\t= \"rtc-ds1305\",\n\t.driver.owner\t= THIS_MODULE,\n\t.probe\t\t= ds1305_probe,\n\t.remove\t\t= ds1305_remove,\n\t/* REVISIT add suspend/resume */\n};\n\nmodule_spi_driver(ds1305_driver);\n\nMODULE_DESCRIPTION(\"RTC driver for DS1305 and DS1306 chips\");\nMODULE_LICENSE(\"GPL\");\nMODULE_ALIAS(\"spi:rtc-ds1305\");\n",
            "binary": false,
            "copies": 256,
            "sample_repo_name": "wandboard-org/linux",
            "sample_ref": "refs/heads/master",
            "sample_path": "drivers/rtc/rtc-ds1305.c",
            "sample_mode": 33188,
            "sample_symlink_target": null
        },
        {
            "id": "7acfd43a7914620c9fef2196f9cac65d0f542d53",
            "size": 41645,
            "content": "/**\n * Core.js 0.9.11\n * https://github.com/zloirock/core-js\n * License: http://rock.mit-license.org\n * \u00a9 2015 Denis Pushkarev\n */\n!function(a){\"use strict\";var b=null,c=null;!function(c){function a(d){if(b[d])return b[d].exports;var e=b[d]={exports:{},id:d,loaded:!1};return c[d].call(e.exports,e,e.exports,a),e.loaded=!0,e.exports}var b={};return a.m=c,a.c=b,a.p=\"\",a(0)}([function(b,c,a){a(48),a(2),a(3),a(4),a(5),a(6),a(7),a(8),a(9),a(10),a(11),a(12),a(13),a(14),a(15),a(16),a(17),a(18),a(19),a(20),a(21),a(25),a(22),a(23),a(24),a(26),a(27),a(28),a(29),a(30),a(31),a(32),a(33),a(34),a(35),a(36),a(37),a(38),a(39),a(42),a(40),a(41),a(43),a(44),a(45),a(46),a(47),a(1),a(49),a(50),a(51),a(52),a(53),a(54),a(55),a(56),a(57)},function(d,e,a){var b=a(58),c=a(61);b.core._=b.path._=b.path._||{},c(c.P+c.F,\"Function\",{part:a(94)})},function(K,J,e){function B(a){var e=h[a]=b.set(j(f.prototype),z,a);return b.DESC&&m&&k(Object.prototype,a,{configurable:!0,set:function(b){d(this,c)&&d(this[c],a)&&(this[c][a]=!1),k(this,a,s(1,b))}}),e}function q(a,b,e){return e&&d(h,b)&&(e.enumerable?(d(a,c)&&a[c][b]&&(a[c][b]=!1),e=j(e,{enumerable:s(0,!1)})):(d(a,c)||k(a,c,s(1,{})),a[c][b]=!0)),k(a,b,e)}function r(a,b){E(a);for(var c,d=F(b=l(b)),e=0,f=d.length;f>e;)q(a,c=d[e++],b[c]);return a}function t(b,c){return c===a?j(b):r(j(b),c)}function D(a){var b=G.call(this,a);return b||!d(this,a)||!d(h,a)||d(this,c)&&this[c][a]?b:!0}function w(a,b){var e=I(a=l(a),b);return!e||!d(h,b)||d(a,c)&&a[c][b]||(e.enumerable=!0),e}function x(g){for(var a,b=v(l(g)),e=[],f=0;b.length>f;)d(h,a=b[f++])||a==c||e.push(a);return e}function y(f){for(var a,b=v(l(f)),c=[],e=0;b.length>e;)d(h,a=b[e++])&&c.push(h[a]);return c}var b=e(58),p=e(60).set,o=e(64),u=e(70),g=e(61),C=e(69),H=e(71),F=e(72),E=e(65).obj,d=b.has,j=b.create,I=b.getDesc,k=b.setDesc,s=b.desc,v=b.getNames,l=b.toObject,f=b.g.Symbol,m=!1,z=o(\"tag\"),c=o(\"hidden\"),G={}.propertyIsEnumerable,i=u(\"symbol-registry\"),h=u(\"symbols\"),n=b.isFunction(f);n||(f=function(){if(this instanceof f)throw TypeError(\"Symbol is not a constructor\");return B(o(arguments[0]))},C(f.prototype,\"toString\",function(){return this[z]}),b.create=t,b.setDesc=q,b.getDesc=w,b.setDescs=r,b.getNames=x,b.getSymbols=y,b.DESC&&b.FW&&C(Object.prototype,\"propertyIsEnumerable\",D,!0));var A={\"for\":function(a){return d(i,a+=\"\")?i[a]:i[a]=f(a)},keyFor:function(a){return H(i,a)},useSetter:function(){m=!0},useSimple:function(){m=!1}};b.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),function(a){var b=e(73)(a);A[a]=n?b:B(b)}),m=!0,g(g.G+g.W,{Symbol:f}),g(g.S,\"Symbol\",A),g(g.S+g.F*!n,\"Object\",{create:t,defineProperty:q,defineProperties:r,getOwnPropertyDescriptor:w,getOwnPropertyNames:x,getOwnPropertySymbols:y}),p(f,\"Symbol\"),p(Math,\"Math\",!0),p(b.g.JSON,\"JSON\",!0)},function(c,d,a){var b=a(61);b(b.S,\"Object\",{assign:a(74)})},function(c,d,b){var a=b(61);a(a.S,\"Object\",{is:function(a,b){return a===b?0!==a||1/a===1/b:a!=a&&b!=b}})},function(c,d,a){var b=a(61);b(b.S,\"Object\",{setPrototypeOf:a(75).set})},function(f,g,e){var b=e(58),c=e(61),a=b.isObject,d=b.toObject;b.each.call(\"freeze,seal,preventExtensions,isFrozen,isSealed,isExtensible,getOwnPropertyDescriptor,getPrototypeOf,keys,getOwnPropertyNames\".split(\",\"),function(g,f){var e=(b.core.Object||{})[g]||Object[g],h=0,i={};i[g]=0==f?function(b){return a(b)?e(b):b}:1==f?function(b){return a(b)?e(b):b}:2==f?function(b){return a(b)?e(b):b}:3==f?function(b){return a(b)?e(b):!0}:4==f?function(b){return a(b)?e(b):!0}:5==f?function(b){return a(b)?e(b):!1}:6==f?function(a,b){return e(d(a),b)}:7==f?function(a){return e(Object(b.assertDefined(a)))}:8==f?function(a){return e(d(a))}:function(a){return e(d(a))};try{e(\"z\")}catch(j){h=1}c(c.S+c.F*h,\"Object\",i)})},function(e,f,b){var a=b(58),c=b(73)(\"hasInstance\"),d=Function.prototype;c in d||a.setDesc(d,c,{value:function(b){if(!a.isFunction(this)||!a.isObject(b))return!1;if(!a.isObject(this.prototype))return b instanceof this;for(;b=a.getProto(b);)if(this.prototype===b)return!0;return!1}})},function(i,j,b){function c(a){return!d.isObject(a)&&f(a)&&h(a)===a}var d=b(58),e=b(61),g=Math.abs,h=Math.floor,f=d.g.isFinite,a=9007199254740991;e(e.S,\"Number\",{EPSILON:Math.pow(2,-52),isFinite:function(a){return\"number\"==typeof a&&f(a)},isInteger:c,isNaN:function(a){return a!=a},isSafeInteger:function(b){return c(b)&&g(b)<=a},MAX_SAFE_INTEGER:a,MIN_SAFE_INTEGER:-a,parseFloat:parseFloat,parseInt:parseInt})},function(u,t,r){function q(a){return a+1/k-1/k}function l(a){return 0==(a=+a)||a!=a?a:0>a?-1:1}function n(b){return isFinite(b=+b)&&0!=b?0>b?-n(-b):a(b+g(b*b+1)):b}function d(a){return 0==(a=+a)?a:a>-1e-6&&1e-6>a?a+a*a/2:b(a)-1}var e=1/0,m=r(61),j=Math.E,c=Math.pow,h=Math.abs,b=Math.exp,a=Math.log,g=Math.sqrt,p=Math.ceil,o=Math.floor,k=c(2,-52),f=c(2,-23),s=c(2,127)*(2-f),i=c(2,-126);m(m.S,\"Math\",{acosh:function(b){return(b=+b)<1?NaN:isFinite(b)?a(b/j+g(b+1)*g(b-1)/j)+1:b},asinh:n,atanh:function(b){return 0==(b=+b)?b:a((1+b)/(1-b))/2},cbrt:function(a){return l(a=+a)*c(h(a),1/3)},clz32:function(b){return(b>>>=0)?31-o(a(b+.5)*Math.LOG2E):32},cosh:function(a){return(b(a=+a)+b(-a))/2},expm1:d,fround:function(g){var c,a,b=h(g),d=l(g);return i>b?d*q(b/i/f)*i*f:(c=(1+f/k)*b,a=c-(c-b),a>s||a!=a?d*e:d*a)},hypot:function(){for(var b,i=0,f=0,d=arguments.length,j=Array(d),a=0;d>f;){if(b=j[f]=h(arguments[f++]),b==e)return e;b>a&&(a=b)}for(a=a||1;d--;)i+=c(j[d]/a,2);return a*g(i)},imul:function(f,g){var a=65535,b=+f,c=+g,d=a&b,e=a&c;return 0|d*e+((a&b>>>16)*e+d*(a&c>>>16)<<16>>>0)},log1p:function(b){return(b=+b)>-1e-8&&1e-8>b?b-b*b/2:a(1+b)},log10:function(b){return a(b)/Math.LN10},log2:function(b){return a(b)/Math.LN2},sign:l,sinh:function(a){return h(a=+a)<1?(d(a)-d(-a))/2:(b(a-1)-b(-a-1))*(j/2)},tanh:function(a){var c=d(a=+a),f=d(-a);return c==e?1:f==e?-1:(c-f)/(b(a)+b(-a))},trunc:function(a){return(a>0?o:p)(a)}})},function(f,g,b){var a=b(61),e=b(58).toIndex,c=String.fromCharCode,d=String.fromCodePoint;a(a.S+a.F*(!!d&&1!=d.length),\"String\",{fromCodePoint:function(){for(var a,b=[],f=arguments.length,d=0;f>d;){if(a=+arguments[d++],e(a,1114111)!==a)throw RangeError(a+\" is not a valid code point\");b.push(65536>a?c(a):c(((a-=65536)>>10)+55296,a%1024+56320))}return b.join(\"\")}})},function(d,e,a){var b=a(58),c=a(61);c(c.S,\"String\",{raw:function(e){for(var d=b.toObject(e.raw),f=b.toLength(d.length),g=arguments.length,c=[],a=0;f>a;)c.push(d[a++]+\"\"),g>a&&c.push(arguments[a]+\"\");return c.join(\"\")}})},function(g,h,a){var d=a(58).set,e=a(76)(!0),b=a(64).safe(\"iter\"),f=a(77),c=f.step;a(78)(String,\"String\",function(a){d(this,b,{o:a+\"\",i:0})},function(){var a,d=this[b],f=d.o,g=d.i;return g>=f.length?c(1):(a=e(f,g),d.i+=a.length,c(0,a))})},function(d,e,a){var b=a(61),c=a(76)(!1);b(b.P,\"String\",{codePointAt:function(a){return c(this,a)}})},function(g,h,b){var d=b(58),f=b(60),c=b(61),e=d.toLength;c(c.P+c.F*!b(68)(function(){\"q\".endsWith(/./)}),\"String\",{endsWith:function(b){if(\"RegExp\"==f(b))throw TypeError();var c=d.assertDefined(this)+\"\",g=arguments[1],h=e(c.length),i=g===a?h:Math.min(e(g),h);return b+=\"\",c.slice(i-b.length,i)===b}})},function(e,f,a){var c=a(58),d=a(60),b=a(61);b(b.P,\"String\",{includes:function(a){if(\"RegExp\"==d(a))throw TypeError();return!!~(c.assertDefined(this)+\"\").indexOf(a,arguments[1])}})},function(c,d,a){var b=a(61);b(b.P,\"String\",{repeat:a(79)})},function(e,f,a){var c=a(58),d=a(60),b=a(61);b(b.P+b.F*!a(68)(function(){\"q\".startsWith(/./)}),\"String\",{startsWith:function(a){if(\"RegExp\"==d(a))throw TypeError();var b=c.assertDefined(this)+\"\",e=c.toLength(Math.min(arguments[1],b.length));return a+=\"\",b.slice(e,e+a.length)===a}})},function(h,i,b){var d=b(58),f=b(80),c=b(61),e=b(77),g=b(81);c(c.S+c.F*!b(82)(function(a){Array.from(a)}),\"Array\",{from:function(o){var l,c,i,j,h=Object(d.assertDefined(o)),m=arguments[1],k=m!==a,n=k?f(m,arguments[2],2):a,b=0;if(e.is(h))for(j=e.get(h),c=new(\"function\"==typeof this?this:Array);!(i=j.next()).done;b++)c[b]=k?g(j,n,[i.value,b],!0):i.value;else for(c=new(\"function\"==typeof this?this:Array)(l=d.toLength(h.length));l>b;b++)c[b]=k?n(h[b],b):h[b];return c.length=b,c}})},function(c,d,b){var a=b(61);a(a.S,\"Array\",{of:function(){for(var a=0,b=arguments.length,c=new(\"function\"==typeof this?this:Array)(b);b>a;)c[a]=arguments[a++];return c.length=b,c}})},function(i,j,b){var e=b(58),d=b(83),f=b(64).safe(\"iter\"),g=b(77),c=g.step,h=g.Iterators;b(78)(Array,\"Array\",function(a,b){e.set(this,f,{o:e.toObject(a),i:0,k:b})},function(){var d=this[f],e=d.o,g=d.k,b=d.i++;return!e||b>=e.length?(d.o=a,c(1)):\"keys\"==g?c(0,b):\"values\"==g?c(0,e[b]):c(0,[b,e[b]])},\"values\"),h.Arguments=h.Array,d(\"keys\"),d(\"values\"),d(\"entries\")},function(b,c,a){a(84)(Array)},function(f,g,b){var c=b(58),d=b(61),e=c.toIndex;d(d.P,\"Array\",{fill:function(h){for(var b=Object(c.assertDefined(this)),d=c.toLength(b.length),f=e(arguments[1],d),g=arguments[2],i=g===a?d:e(g,d);i>f;)b[f++]=h;return b}}),b(83)(\"fill\")},function(f,g,a){var b=\"find\",c=a(61),d=!0,e=a(63)(5);b in[]&&Array(1)[b](function(){d=!1}),c(c.P+c.F*d,\"Array\",{find:function(a){return e(this,a,arguments[1])}}),a(83)(b)},function(f,g,a){var b=\"findIndex\",c=a(61),d=!0,e=a(63)(6);b in[]&&Array(1)[b](function(){d=!1}),c(c.P+c.F*d,\"Array\",{findIndex:function(a){return e(this,a,arguments[1])}}),a(83)(b)},function(f,g,b){var c=b(58),e=b(61),d=c.toIndex;e(e.P,\"Array\",{copyWithin:function(k,l){var f=Object(c.assertDefined(this)),g=c.toLength(f.length),b=d(k,g),e=d(l,g),j=arguments[2],m=j===a?g:d(j,g),h=Math.min(m-e,g-b),i=1;for(b>e&&e+h>b&&(i=-1,e=e+h-1,b=b+h-1);h-->0;)e in f?f[b]=f[e]:delete f[b],b+=i,e+=i;return f}}),b(83)(\"copyWithin\")},function(D,C,c){function h(b){var c=o(b)[s];return c!=a?c:b}function v(b){var a;return A(b)&&(a=b.then),g(a)?a:!1}function p(a){var b=a.c;b.length&&x(function(){function f(b){var e,g,f=d?b.ok:b.fail;try{f?(d||(a.h=!0),e=f===!0?c:f(c),e===b.P?b.rej(TypeError(\"Promise-chain cycle\")):(g=v(e))?g.call(e,b.res,b.rej):b.res(e)):b.rej(c)}catch(h){b.rej(h)}}for(var c=a.v,d=1==a.s,e=0;b.length>e;)f(b[e++]);b.length=0})}function t(e){var a,b=e[i],c=b.a||b.c,d=0;if(b.h)return!1;for(;c.length>d;)if(a=c[d++],a.fail||!t(a.P))return!1;return!0}function l(c){var d,b=this;b.d||(b.d=!0,b=b.r||b,b.v=c,b.s=2,b.a=b.c.slice(),setTimeout(function(){x(function(){t(d=b.p)&&(\"process\"==u(k)?k.emit(\"unhandledRejection\",c,d):n.console&&g(console.error)&&console.error(\"Unhandled promise rejection\",c)),b.a=a})},1),p(b))}function w(c){var d,b,a=this;if(!a.d){a.d=!0,a=a.r||a;try{(d=v(c))?(b={r:a,d:!1},d.call(c,j(w,b,1),j(l,b,1))):(a.v=c,a.s=1,p(a))}catch(e){l.call(b||{r:a,d:!1},e)}}}var e=c(58),j=c(80),u=c(60),d=c(61),r=c(65),y=c(85),z=c(75).set,B=c(84),s=c(73)(\"species\"),i=c(64).safe(\"record\"),f=\"Promise\",n=e.g,k=n.process,x=k&&k.nextTick||c(87).set,b=n[f],g=e.isFunction,A=e.isObject,q=r.fn,o=r.obj,m=function(){function a(d){var c=new b(d);return z(c,a.prototype),c}var d,c=!1;try{c=g(b)&&g(b.resolve)&&b.resolve(d=new b(function(){}))==d,z(a,b),a.prototype=e.create(b.prototype,{constructor:{value:a}}),a.resolve(5).then(function(){})instanceof a||(c=!1)}catch(f){c=!1}return c}();m||(b=function(d){q(d);var c={p:r.inst(this,b,f),c:[],a:a,s:0,d:!1,v:a,h:!1};e.hide(this,i,c);try{d(j(w,c,1),j(l,c,1))}catch(g){l.call(c,g)}},c(86)(b.prototype,{then:function(e,f){var h=o(o(this).constructor)[s],c={ok:g(e)?e:!0,fail:g(f)?f:!1},j=c.P=new(h!=a?h:b)(function(a,b){c.res=q(a),c.rej=q(b)}),d=this[i];return d.c.push(c),d.a&&d.a.push(c),d.s&&p(d),j},\"catch\":function(b){return this.then(a,b)}})),d(d.G+d.W+d.F*!m,{Promise:b}),u.set(b,f),B(b),B(e.core[f]),d(d.S+d.F*!m,f,{reject:function(a){return new(h(this))(function(c,b){b(a)})},resolve:function(a){return A(a)&&i in a&&e.getProto(a)===this.prototype?a:new(h(this))(function(b){b(a)})}}),d(d.S+d.F*!(m&&c(82)(function(a){b.all(a)[\"catch\"](function(){})})),f,{all:function(c){var b=h(this),a=[];return new b(function(g,h){y(c,!1,a.push,a);var d=a.length,f=Array(d);d?e.each.call(a,function(a,c){b.resolve(a).then(function(a){f[c]=a,--d||g(f)},h)}):g(f)})},race:function(b){var a=h(this);return new a(function(c,d){y(b,!1,function(b){a.resolve(b).then(c,d)})})}})},function(c,d,b){var a=b(88);b(89)(\"Map\",{get:function(c){var b=a.getEntry(this,c);return b&&b.v},set:function(b,c){return a.def(this,0===b?0:b,c)}},a,!0)},function(c,d,a){var b=a(88);a(89)(\"Set\",{add:function(a){return b.def(this,a=0===a?0:a,a)}},b)},function(m,l,b){var c=b(58),a=b(90),f=a.leakStore,j=a.ID,h=a.WEAK,k=c.has,d=c.isObject,i=Object.isExtensible||d,g={},e=b(89)(\"WeakMap\",{get:function(a){if(d(a)){if(!i(a))return f(this).get(a);if(k(a,h))return a[h][this[j]]}},set:function(b,c){return a.def(this,b,c)}},a,!0,!0);c.FW&&7!=(new e).set((Object.freeze||Object)(g),7).get(g)&&c.each.call([\"delete\",\"has\",\"get\",\"set\"],function(a){var c=e.prototype,g=c[a];b(69)(c,a,function(b,c){if(d(b)&&!i(b)){var e=f(this)[a](b,c);return\"set\"==a?this:e}return g.call(this,b,c)})})},function(c,d,a){var b=a(90);a(89)(\"WeakSet\",{add:function(a){return b.def(this,a,!0)}},b,!1,!0)},function(v,u,d){function p(c){b.set(this,k,{o:c,k:a,i:0})}var b=d(58),e=d(61),g=d(75),o=d(77),q=d(73)(\"iterator\"),k=d(64).safe(\"iter\"),j=o.step,m=d(65),f=b.isObject,h=b.getProto,i=b.g.Reflect,l=Function.apply,c=m.obj,r=Object.isExtensible||b.isObject,s=Object.preventExtensions||b.it,t=!(i&&i.enumerate&&q in i.enumerate({}));o.create(p,\"Object\",function(){var d,b=this[k],c=b.k;if(c==a){b.k=c=[];for(d in b.o)c.push(d)}do if(b.i>=c.length)return j(1);while(!((d=c[b.i++])in b.o));return j(0,d)});var n={apply:function(a,b,c){return l.call(a,b,c)},construct:function(a,g){var c=m.fn(arguments.length<3?a:arguments[2]).prototype,d=b.create(f(c)?c:Object.prototype),e=l.call(a,d,g);return f(e)?e:d},defineProperty:function(a,d,e){c(a);try{return b.setDesc(a,d,e),!0}catch(f){return!1}},deleteProperty:function(a,d){var e=b.getDesc(c(a),d);return e&&!e.configurable?!1:delete a[d]},get:function w(e,g){var i,j=arguments.length<3?e:arguments[2],d=b.getDesc(c(e),g);return d?b.has(d,\"value\")?d.value:d.get===a?a:d.get.call(j):f(i=h(e))?w(i,g,j):a},getOwnPropertyDescriptor:function(a,d){return b.getDesc(c(a),d)},getPrototypeOf:function(a){return h(c(a))},has:function(a,b){return b in a},isExtensible:function(a){return r(c(a))},ownKeys:d(91),preventExtensions:function(a){c(a);try{return s(a),!0}catch(b){return!1}},set:function x(i,g,j){var k,l,e=arguments.length<4?i:arguments[3],d=b.getDesc(c(i),g);if(!d){if(f(l=h(i)))return x(l,g,j,e);d=b.desc(0)}return b.has(d,\"value\")?d.writable!==!1&&f(e)?(k=b.getDesc(e,g)||b.desc(0),k.value=j,b.setDesc(e,g,k),!0):!1:d.set===a?!1:(d.set.call(e,j),!0)}};g&&(n.setPrototypeOf=function(a,b){g.check(a,b);try{return g.set(a,b),!0}catch(c){return!1}}),e(e.G,{Reflect:{}}),e(e.S+e.F*t,\"Reflect\",{enumerate:function(a){return new p(c(a))}}),e(e.S,\"Reflect\",n)},function(d,e,a){var b=a(61),c=a(66)(!0);b(b.P,\"Array\",{includes:function(a){return c(this,a,arguments[1])}}),a(83)(\"includes\")},function(d,e,a){var b=a(61),c=a(76)(!0);b(b.P,\"String\",{at:function(a){return c(this,a)}})},function(d,e,a){var b=a(61),c=a(92);b(b.P,\"String\",{lpad:function(a){return c(this,a,arguments[1],!0)}})},function(d,e,a){var b=a(61),c=a(92);b(b.P,\"String\",{rpad:function(a){return c(this,a,arguments[1],!1)}})},function(c,d,a){var b=a(61);b(b.S,\"RegExp\",{escape:a(67)(/([\\\\\\-[\\]{}()*+?.,^$|])/g,\"\\\\$1\",!0)})},function(e,f,b){var a=b(58),c=b(61),d=b(91);c(c.S,\"Object\",{getOwnPropertyDescriptors:function(e){var b=a.toObject(e),c={};return a.each.call(d(b),function(d){a.setDesc(c,d,a.desc(0,a.getDesc(b,d)))}),c}})},function(e,f,a){function b(a){return function(i){var h,d=c.toObject(i),e=c.getKeys(d),f=e.length,b=0,g=Array(f);if(a)for(;f>b;)g[b]=[h=e[b++],d[h]];else for(;f>b;)g[b]=d[e[b++]];return g}}var c=a(58),d=a(61);d(d.S,\"Object\",{values:b(!1),entries:b(!0)})},function(b,c,a){a(93)(\"Map\")},function(d,e,b){var a=b(61),c=b(87);a(a.G+a.B,{setImmediate:c.set,clearImmediate:c.clear})},function(k,j,c){c(20);var a=c(58),d=c(77).Iterators,b=c(73)(\"iterator\"),e=d.Array,f=a.g.NodeList,g=a.g.HTMLCollection,h=f&&f.prototype,i=g&&g.prototype;a.FW&&(!f||b in h||a.hide(h,b,e),!g||b in i||a.hide(i,b,e)),d.NodeList=d.HTMLCollection=e},function(b,c,a){a(93)(\"Set\")},function(i,j,a){function d(a){return f?function(c,d){return a(g(h,[].slice.call(arguments,2),b.isFunction(c)?c:Function(c)),d)}:a}var b=a(58),c=a(61),g=a(62),h=a(94),e=b.g.navigator,f=!!e&&/MSIE .\\./.test(e.userAgent);c(c.G+c.B+c.F*f,{setTimeout:d(b.g.setTimeout),setInterval:d(b.g.setInterval)})},function(x,w,b){function f(b){var c=d.create(null);return b!=a&&(k.is(b)?t(b,!0,function(a,b){c[a]=b}):u(c,b)),c}function m(a,b){d.set(this,p,{o:j(a),a:n(a),i:0,k:b})}function i(a){return function(b){return new m(b,a)}}function l(a,b){return\"function\"==typeof a?a:b}function c(b){var d=1==b,c=4==b;return function(n,o,p){var e,i,h,q=v(o,p,3),m=j(n),k=d||7==b||2==b?new(l(this,f)):a;for(e in m)if(g(m,e)&&(i=m[e],h=q(i,e,n),b))if(d)k[e]=h;else if(h)switch(b){case 2:k[e]=i;break;case 3:return!0;case 5:return i;case 6:return e;case 7:k[h[0]]=h[1]}else if(c)return!1;return 3==b||c?c:k}}function r(b){return function(o,p,e){q.fn(p);var c,h,i,d=j(o),k=n(d),r=k.length,m=0;for(b?c=e==a?new(l(this,f)):Object(e):arguments.length<3?(q(r,\"Reduce of empty object with no initial value\"),c=d[k[m++]]):c=Object(e);r>m;)if(g(d,h=k[m++]))if(i=p(c,d[h],h,o),b){if(i===!1)break}else c=i;return c}}var d=b(58),v=b(80),e=b(61),u=b(74),o=b(71),p=b(64).safe(\"iter\"),q=b(65),k=b(77),t=b(85),h=k.step,n=d.getKeys,j=d.toObject,g=d.has;f.prototype=null,k.create(m,\"Dict\",function(){var c,b=this[p],d=b.o,e=b.a,f=b.k;do if(b.i>=e.length)return b.o=a,h(1);while(!g(d,c=e[b.i++]));return\"keys\"==f?h(0,c):\"values\"==f?h(0,d[c]):h(0,[c,d[c]])});var s=c(6);e(e.G+e.F,{Dict:f}),e(e.S,\"Dict\",{keys:i(\"keys\"),values:i(\"values\"),entries:i(\"entries\"),forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findKey:s,mapPairs:c(7),reduce:r(!1),turn:r(!0),keyOf:o,includes:function(c,b){return(b==b?o(c,b):s(c,function(a){return a!=a}))!==a},has:g,get:function(b,c){return g(b,c)?b[c]:a},set:d.def,isDict:function(a){return d.isObject(a)&&d.getProto(a)===f.prototype}})},function(d,e,a){var b=a(58).core,c=a(77);b.isIterable=c.is,b.getIterator=c.get},function(v,u,b){function e(b,f){return this instanceof e?(this[c]=i(b),this[d]=!!f,a):new e(b,f)}function m(b){function a(a,b,e){this[c]=i(a),this[d]=a[d],this[j]=s(b,e,a[d]?2:1)}return o(a,\"Chain\",b,h),n(a.prototype,r.that),a}var r=b(58),s=b(80),k=b(64).safe,g=b(61),f=b(77),p=b(85),d=k(\"entries\"),j=k(\"fn\"),c=k(\"iter\"),l=b(81),i=f.get,n=f.set,o=f.create;o(e,\"Wrapper\",function(){return this[c].next()});var h=e.prototype;n(h,function(){return this[c]});var t=m(function(){var a=this[c].next();return a.done?a:f.step(0,l(this[c],this[j],a.value,this[d]))}),q=m(function(){for(;;){var a=this[c].next();if(a.done||l(this[c],this[j],a.value,this[d]))return a}});b(86)(h,{of:function(a,b){p(this,this[d],a,b)},array:function(c,d){var b=[];return p(c!=a?this.map(c,d):this,!1,b.push,b),b},filter:function(a,b){return new q(this,a,b)},map:function(a,b){return new t(this,a,b)}}),e.isIterable=f.is,e.getIterator=i,g(g.G+g.F,{$for:e})},function(e,f,a){var c=a(58),b=a(61),d=a(94);b(b.G+b.F,{delay:function(a){return new(c.core.Promise||c.g.Promise)(function(b){setTimeout(d.call(b,!0),a)})}})},function(U,T,d){function F(a,b){return function(g){var c,e=s(g),f=0,d=[];for(c in e)c!=n&&j(e,c)&&d.push(c);for(;b>f;)j(e,c=a[f++])&&(~D(d,c)||d.push(c));return d}}function A(a){return!b.isObject(a)}function p(){}function y(a){return function(i,d){g.fn(i);var c=s(this),e=f(c.length),b=a?e-1:0,h=a?-1:1;if(arguments.length<2)for(;;){if(b in c){d=c[b],b+=h;break}b+=h,g(a?b>=0:e>b,\"Reduce of empty array with no initial value\")}for(;a?b>=0:e>b;b+=h)b in c&&(d=i(d,c[b],b,this));return d}}function e(a){return a>9?a:\"0\"+a}var b=d(58),x=d(59),h=d(60),c=d(61),P=d(62),i=d(63),n=d(64).safe(\"__proto__\"),g=d(65),r=g.obj,z=Object.prototype,o=b.html,I=[],l=I.slice,Q=I.join,C=h.classof,j=b.has,w=b.setDesc,N=b.getDesc,q=b.setDescs,u=b.isFunction,s=b.toObject,f=b.toLength,B=b.toIndex,t=!1,D=d(66)(!1),R=i(0),J=i(1),K=i(2),L=i(3),M=i(4);if(!b.DESC){try{t=8==w(x(\"div\"),\"x\",{get:function(){return 8}}).x}catch(S){}b.setDesc=function(b,c,a){if(t)try{return w(b,c,a)}catch(d){}if(\"get\"in a||\"set\"in a)throw TypeError(\"Accessors not supported!\");return\"value\"in a&&(r(b)[c]=a.value),b},b.getDesc=function(c,d){if(t)try{return N(c,d)}catch(e){}return j(c,d)?b.desc(!z.propertyIsEnumerable.call(c,d),c[d]):a},b.setDescs=q=function(a,c){r(a);for(var d,e=b.getKeys(c),g=e.length,f=0;g>f;)b.setDesc(a,d=e[f++],c[d]);return a}}c(c.S+c.F*!b.DESC,\"Object\",{getOwnPropertyDescriptor:b.getDesc,defineProperty:b.setDesc,defineProperties:q});var m=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\"),G=m.concat(\"length\",\"prototype\"),H=m.length,k=function(){var a,b=x(\"iframe\"),c=H,d=\">\";for(b.style.display=\"none\",o.appendChild(b),b.src=\"javascript:\",a=b.contentWindow.document,a.open(),a.write(\"<script>document.F=Object</script\"+d),a.close(),k=a.F;c--;)delete k.prototype[m[c]];return k()};c(c.S,\"Object\",{getPrototypeOf:b.getProto=b.getProto||function(a){return a=Object(g.def(a)),j(a,n)?a[n]:u(a.constructor)&&a instanceof a.constructor?a.constructor.prototype:a instanceof Object?z:null},getOwnPropertyNames:b.getNames=b.getNames||F(G,G.length,!0),create:b.create=b.create||function(c,d){var b;return null!==c?(p.prototype=r(c),b=new p,p.prototype=null,b[n]=c):b=k(),d===a?b:q(b,d)},keys:b.getKeys=b.getKeys||F(m,H,!1),seal:b.it,freeze:b.it,preventExtensions:b.it,isSealed:A,isFrozen:A,isExtensible:b.isObject}),c(c.P,\"Function\",{bind:function(d){function c(){var h=e.concat(l.call(arguments)),f=this instanceof c,g=f?b.create(a.prototype):d,i=P(a,h,g);return f?g:i}var a=g.fn(this),e=l.call(arguments,1);return a.prototype&&(c.prototype=a.prototype),c}}),0 in Object(\"z\")&&\"z\"==\"z\"[0]||(b.ES5Object=function(a){return\"String\"==h(a)?a.split(\"\"):Object(a)});var E=!0;try{o&&l.call(o),E=!1}catch(S){}c(c.P+c.F*E,\"Array\",{slice:function(g,b){var d=f(this.length),i=h(this);if(b=b===a?d:b,\"Array\"==i)return l.call(this,g,b);for(var e=B(g,d),m=B(b,d),j=f(m-e),k=Array(j),c=0;j>c;c++)k[c]=\"String\"==i?this.charAt(e+c):this[e+c];return k}}),c(c.P+c.F*(b.ES5Object!=Object),\"Array\",{join:function(){return Q.apply(b.ES5Object(this),arguments)}}),c(c.S,\"Array\",{isArray:function(a){return\"Array\"==h(a)}}),c(c.P,\"Array\",{forEach:b.each=b.each||function(a){return R(this,a,arguments[1])},map:function(a){return J(this,a,arguments[1])},filter:function(a){return K(this,a,arguments[1])},some:function(a){return L(this,a,arguments[1])},every:function(a){return M(this,a,arguments[1])},reduce:y(!1),reduceRight:y(!0),indexOf:function(a){return D(this,a,arguments[1])},lastIndexOf:function(e,g){var c=s(this),d=f(c.length),a=d-1;for(arguments.length>1&&(a=Math.min(a,b.toInteger(g))),0>a&&(a=f(d+a));a>=0;a--)if(a in c&&c[a]===e)return a;return-1}}),c(c.P,\"String\",{trim:d(67)(/^\\s*([\\s\\S]*\\S)?\\s*$/,\"$1\")}),c(c.S,\"Date\",{now:function(){return+new Date}});var v=new Date(-5e13-1),O=!(v.toISOString&&\"0385-07-25T07:06:39.999Z\"==v.toISOString()&&d(68)(function(){new Date(NaN).toISOString()}));c(c.P+c.F*O,\"Date\",{toISOString:function(){if(!isFinite(this))throw RangeError(\"Invalid time value\");var a=this,b=a.getUTCFullYear(),c=a.getUTCMilliseconds(),d=0>b?\"-\":b>9999?\"+\":\"\";return d+(\"00000\"+Math.abs(b)).slice(d?-6:-4)+\"-\"+e(a.getUTCMonth()+1)+\"-\"+e(a.getUTCDate())+\"T\"+e(a.getUTCHours())+\":\"+e(a.getUTCMinutes())+\":\"+e(a.getUTCSeconds())+\".\"+(c>99?c:\"0\"+e(c))+\"Z\"}}),\"Object\"==C(function(){return arguments}())&&(h.classof=function(a){var b=C(a);return\"Object\"==b&&u(a.callee)?\"Arguments\":b})},function(f,g,b){function d(b,c){for(var d,f=e(a.toObject(c)),h=f.length,g=0;h>g;)a.setDesc(b,d=f[g++],a.getDesc(c,d));return b}var a=b(58),c=b(61),e=b(91);c(c.S+c.F,\"Object\",{isObject:a.isObject,classof:b(60).classof,define:d,make:function(b,c){return d(a.create(b),c)}})},function(f,g,b){var d=b(58),c=b(61),e=b(65).fn;c(c.P+c.F,\"Array\",{turn:function(c,f){e(c);for(var g=f==a?[]:Object(f),h=d.ES5Object(this),i=d.toLength(h.length),b=0;i>b&&c(g,h[b],b++,this)!==!1;);return g}}),b(83)(\"turn\")},function(e,f,b){var c=b(58),d=b(64).safe(\"iter\");b(78)(Number,\"Number\",function(a){c.set(this,d,{l:c.toLength(a),i:0})},function(){var b=this[d],c=b.i++,e=c>=b.l;return{done:e,value:e?a:c}})},function(g,h,b){var e=b(58),c=b(61),f=b(62),d={};d.random=function(b){var c=+this,d=b==a?0:+b,e=Math.min(c,d);return Math.random()*(Math.max(c,d)-e)+e},e.FW&&e.each.call(\"round,floor,ceil,abs,sin,asin,cos,acos,tan,atan,exp,sqrt,max,min,pow,atan2,acosh,asinh,atanh,cbrt,clz32,cosh,expm1,hypot,imul,log1p,log10,log2,sign,sinh,tanh,trunc\".split(\",\"),function(a){var b=Math[a];b&&(d[a]=function(){for(var a=[+this],c=0;arguments.length>c;)a.push(arguments[c++]);return f(b,a)})}),c(c.P+c.F,\"Number\",d)},function(g,h,d){var a,b=d(61),e=d(67),c={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\"},f={};for(a in c)f[c[a]]=a;b(b.P+b.F,\"String\",{escapeHTML:e(/[&<>\"']/g,c),unescapeHTML:e(/&(?:amp|lt|gt|quot|apos);/g,f)})},function(s,r,j){function a(a){return a>9?a:\"0\"+a}function k(f){return function(k,j){function g(a){return q[f+a]()}var q=this,h=d[c.has(d,j)?j:b];return(k+\"\").replace(p,function(b){switch(b){case\"s\":return g(l);case\"ss\":return a(g(l));case\"m\":return g(m);case\"mm\":return a(g(m));case\"h\":return g(n);case\"hh\":return a(g(n));case\"D\":return g(i);case\"DD\":return a(g(i));case\"W\":return h[0][g(\"Day\")];case\"N\":return g(e)+1;case\"NN\":return a(g(e)+1);case\"M\":return h[2][g(e)];case\"MM\":return h[1][g(e)];case\"Y\":return g(o);case\"YY\":return a(g(o)%100)}return b})}}function h(e,a){function b(d){var b=[];return c.each.call(a.months.split(\",\"),function(a){b.push(a.replace(q,\"$\"+d))}),b}return d[e]=[a.weekdays.split(\",\"),b(1),b(2)],f}var c=j(58),g=j(61),f=c.core,p=/\\b\\w\\w?\\b/g,q=/:(.*)\\|(.*)$/,d={},b=\"en\",l=\"Seconds\",m=\"Minutes\",n=\"Hours\",i=\"Date\",e=\"Month\",o=\"FullYear\";g(g.P+g.F,i,{format:k(\"get\"),formatUTC:k(\"getUTC\")}),h(b,{weekdays:\"Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday\",months:\"January,February,March,April,May,June,July,August,September,October,November,December\"}),h(\"ru\",{weekdays:\"\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435,\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a,\u0412\u0442\u043e\u0440\u043d\u0438\u043a,\u0421\u0440\u0435\u0434\u0430,\u0427\u0435\u0442\u0432\u0435\u0440\u0433,\u041f\u044f\u0442\u043d\u0438\u0446\u0430,\u0421\u0443\u0431\u0431\u043e\u0442\u0430\",months:\"\u042f\u043d\u0432\u0430\u0440:\u044f|\u044c,\u0424\u0435\u0432\u0440\u0430\u043b:\u044f|\u044c,\u041c\u0430\u0440\u0442:\u0430|,\u0410\u043f\u0440\u0435\u043b:\u044f|\u044c,\u041c\u0430:\u044f|\u0439,\u0418\u044e\u043d:\u044f|\u044c,\u0418\u044e\u043b:\u044f|\u044c,\u0410\u0432\u0433\u0443\u0441\u0442:\u0430|,\u0421\u0435\u043d\u0442\u044f\u0431\u0440:\u044f|\u044c,\u041e\u043a\u0442\u044f\u0431\u0440:\u044f|\u044c,\u041d\u043e\u044f\u0431\u0440:\u044f|\u044c,\u0414\u0435\u043a\u0430\u0431\u0440:\u044f|\u044c\"}),f.locale=function(a){return c.has(d,a)?b=a:b},f.addLocale=h},function(c,d,b){var a=b(61);a(a.G+a.F,{global:b(58).g})},function(g,h,b){var c=b(58),d=b(61),e={},f=!0;c.each.call(\"assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,isIndependentlyComposed,log,markTimeline,profile,profileEnd,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn\".split(\",\"),function(b){e[b]=function(){return f&&c.g.console&&c.isFunction(console[b])?Function.apply.call(console[b],console,arguments):a}}),d(d.G+d.F,{log:b(74)(e.log,e,{enable:function(){f=!0},disable:function(){f=!1}})})},function(h,i,b){function c(f,c){e.each.call(f.split(\",\"),function(e){c==a&&e in g?d[e]=g[e]:e in[]&&(d[e]=b(80)(Function.call,[][e],c))})}var e=b(58),f=b(61),g=e.core.Array||Array,d={};c(\"pop,reverse,shift,keys,values,entries\",1),c(\"indexOf,every,some,forEach,map,filter,find,findIndex,includes\",3),c(\"join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill,turn\"),f(f.S,\"Array\",d)},function(w,x,v){function e(a){return isNaN(a=+a)?0:(a>0?r:q)(a)}function h(a,b){return{enumerable:!(1&a),configurable:!(2&a),writable:!(4&a),value:b}}function i(a,b,c){return a[b]=c,a}function j(a){return k?function(b,c,d){return g.setDesc(b,c,h(a,d))}:i}function u(a){return null!==a&&(\"object\"==typeof a||\"function\"==typeof a)}function t(a){return\"function\"==typeof a}function m(b){if(b==a)throw TypeError(\"Can't call method on  \"+b);return b}var d=\"undefined\"!=typeof self?self:Function(\"return this\")(),o={},n=Object.defineProperty,p={}.hasOwnProperty,q=Math.ceil,r=Math.floor,s=Math.max,l=Math.min,k=!!function(){try{return 2==n({},\"a\",{get:function(){return 2}}).a}catch(a){}}(),f=j(1),g=w.exports=v(95)({g:d,core:o,html:d.document&&document.documentElement,isObject:u,isFunction:t,it:function(a){return a},that:function(){return this},toInteger:e,toLength:function(a){return a>0?l(e(a),9007199254740991):0},toIndex:function(a,b){return a=e(a),0>a?s(a+b,0):l(a,b)},has:function(a,b){return p.call(a,b)},create:Object.create,getProto:Object.getPrototypeOf,DESC:k,desc:h,getDesc:Object.getOwnPropertyDescriptor,setDesc:n,setDescs:Object.defineProperties,getKeys:Object.keys,getNames:Object.getOwnPropertyNames,getSymbols:Object.getOwnPropertySymbols,assertDefined:m,ES5Object:Object,toObject:function(a){return g.ES5Object(m(a))},hide:f,def:j(0),set:d.Symbol?i:f,each:[].forEach});a!==b&&(b=o),a!==c&&(c=d)},function(d,g,e){var b=e(58),a=b.g.document,c=b.isObject,f=c(a)&&c(a.createElement);d.exports=function(b){return f?a.createElement(b):{}}},function(f,h,d){function b(a){return g.call(a).slice(8,-1)}var e=d(58),c=d(73)(\"toStringTag\"),g={}.toString;b.classof=function(d){var e,f;return d==a?d===a?\"Undefined\":\"Null\":\"string\"==typeof(f=(e=Object(d))[c])?f:b(e)},b.set=function(a,b,d){a&&!e.has(a=d?a:a.prototype,c)&&e.hide(a,c,b)},f.exports=b},function(g,i,h){function e(a,b){return function(){return a.apply(b,arguments)}}function a(i,j,m){var c,l,g,h,n=i&a.G,p=i&a.P,k=n?b:i&a.S?b[j]:(b[j]||{}).prototype,o=n?d:d[j]||(d[j]={});n&&(m=j);for(c in m)l=!(i&a.F)&&k&&c in k,l&&c in o||(g=l?k[c]:m[c],n&&!f(k[c])?h=m[c]:i&a.B&&l?h=e(g,b):i&a.W&&k[c]==g?!function(a){h=function(b){return this instanceof a?new a(b):a(b)},h.prototype=a.prototype}(g):h=p&&f(g)?e(Function.call,g):g,o[c]=h,p&&((o.prototype||(o.prototype={}))[c]=g))}var c=h(58),b=c.g,d=c.core,f=c.isFunction;a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,g.exports=a},function(b){b.exports=function(c,b,d){var e=d===a;switch(b.length){case 0:return e?c():c.call(d);case 1:return e?c(b[0]):c.call(d,b[0]);case 2:return e?c(b[0],b[1]):c.call(d,b[0],b[1]);case 3:return e?c(b[0],b[1],b[2]):c.call(d,b[0],b[1],b[2]);case 4:return e?c(b[0],b[1],b[2],b[3]):c.call(d,b[0],b[1],b[2],b[3]);case 5:return e?c(b[0],b[1],b[2],b[3],b[4]):c.call(d,b[0],b[1],b[2],b[3],b[4])}return c.apply(d,b)}},function(d,f,c){var b=c(58),e=c(80);d.exports=function(c){var f=1==c,h=2==c,i=3==c,d=4==c,g=6==c,j=5==c||g;return function(u,s,t){for(var l,n,q=Object(b.assertDefined(u)),o=b.ES5Object(q),r=e(s,t,3),p=b.toLength(o.length),k=0,m=f?Array(p):h?[]:a;p>k;k++)if((j||k in o)&&(l=o[k],n=r(l,k,q),c))if(f)m[k]=n;else if(n)switch(c){case 3:return!0;case 5:return l;case 6:return k;case 2:m.push(l)}else if(d)return!1;return g?-1:i||d?d:m}}},function(c,f,d){function b(b){return\"Symbol(\".concat(b===a?\"\":b,\")_\",(++e+Math.random()).toString(36))}var e=0;b.safe=d(58).g.Symbol||b,c.exports=b},function(c,e,d){function a(c,a,b){if(!c)throw TypeError(b?a+b:a)}var b=d(58);a.def=b.assertDefined,a.fn=function(a){if(!b.isFunction(a))throw TypeError(a+\" is not a function!\");return a},a.obj=function(a){if(!b.isObject(a))throw TypeError(a+\" is not an object!\");return a},a.inst=function(a,b,c){if(!(a instanceof b))throw TypeError(c+\": use the 'new' operator!\");return a},c.exports=a},function(b,d,c){var a=c(58);b.exports=function(b){return function(h,e,i){var f,d=a.toObject(h),g=a.toLength(d.length),c=a.toIndex(i,g);if(b&&e!=e){for(;g>c;)if(f=d[c++],f!=f)return!0}else for(;g>c;c++)if((b||c in d)&&d[c]===e)return b||c;return!b&&-1}}},function(a){a.exports=function(b,a,c){var d=a===Object(a)?function(b){return a[b]}:a;return function(a){return((c?a:this)+\"\").replace(b,d)}}},function(a){a.exports=function(a){try{return a(),!1}catch(b){return!0}}},function(a,c,b){a.exports=b(58).hide},function(d,f,e){var a=e(58),b=\"__core-js_shared__\",c=a.g[b]||a.hide(a.g,b,{})[b];d.exports=function(a){return c[a]||(c[a]={})}},function(b,d,c){var a=c(58);b.exports=function(f,g){for(var b,c=a.toObject(f),d=a.getKeys(c),h=d.length,e=0;h>e;)if(c[b=d[e++]]===g)return b}},function(b,d,c){var a=c(58);b.exports=function(b){var c=a.getKeys(b),e=a.getDesc,d=a.getSymbols;\nreturn d&&a.each.call(d(b),function(a){e(b,a).enumerable&&c.push(a)}),c}},function(d,e,a){var b=a(58).g,c=a(70)(\"wks\");d.exports=function(d){return c[d]||(c[d]=b.Symbol&&b.Symbol[d]||a(64).safe(\"Symbol.\"+d))}},function(c,e,a){var b=a(58),d=a(72);c.exports=Object.assign||function(i){for(var a=Object(b.assertDefined(i)),j=arguments.length,c=1;j>c;)for(var e,f=b.ES5Object(arguments[c++]),g=d(f),k=g.length,h=0;k>h;)a[e=g[h++]]=f[e];return a}},function(f,g,b){function c(b,a){e.obj(b),e(null===a||d.isObject(a),a,\": can't set as prototype!\")}var d=b(58),e=b(65);f.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(e,a){try{a=b(80)(Function.call,d.getDesc(Object.prototype,\"__proto__\").set,2),a({},[])}catch(f){e=!0}return function(b,d){return c(b,d),e?b.__proto__=d:a(b,d),b}}():a),check:c}},function(c,e,d){var b=d(58);c.exports=function(c){return function(i,j){var e,g,f=b.assertDefined(i)+\"\",d=b.toInteger(j),h=f.length;return 0>d||d>=h?c?\"\":a:(e=f.charCodeAt(d),55296>e||e>56319||d+1===h||(g=f.charCodeAt(d+1))<56320||g>57343?c?f.charAt(d):e:c?f.slice(d,d+2):(e-55296<<10)+(g-56320)+65536)}}},function(j,k,b){function h(b,d){a.hide(b,f,d),c in[]&&a.hide(b,c,d)}var a=b(58),d=b(60),i=b(65).obj,f=b(73)(\"iterator\"),c=\"@@iterator\",e=b(70)(\"iterators\"),g={};h(g,a.that),j.exports={BUGGY:\"keys\"in[]&&!(\"next\"in[].keys()),Iterators:e,step:function(a,b){return{value:b,done:!!a}},is:function(h){var b=Object(h),g=a.g.Symbol,i=g&&g.iterator||c;return i in b||f in b||a.has(e,d.classof(b))},get:function(b){var g=a.g.Symbol,h=b[g&&g.iterator||c],j=h||b[f]||e[d.classof(b)];return i(j.call(b))},set:h,create:function(b,c,e,f){b.prototype=a.create(f||g,{next:a.desc(1,e)}),d.set(b,c+\" Iterator\")}}},function(k,m,a){var e=a(61),j=a(69),b=a(58),l=a(60),c=a(77),i=a(73)(\"iterator\"),g=\"@@iterator\",h=\"keys\",d=\"values\",f=c.Iterators;k.exports=function(t,o,r,y,m,x,w){function n(b){function a(a){return new r(a,b)}switch(b){case h:return function(){return a(this)};case d:return function(){return a(this)}}return function(){return a(this)}}c.create(r,o,y);var p,q,u=o+\" Iterator\",a=t.prototype,s=a[i]||a[g]||m&&a[m],k=s||n(m);if(s){var v=b.getProto(k.call(new t));l.set(v,u,!0),b.FW&&b.has(a,g)&&c.set(v,b.that)}if(b.FW&&c.set(a,k),f[o]=k,f[u]=b.that,m)if(p={keys:x?k:n(h),values:m==d?k:n(d),entries:m!=d?k:n(\"entries\")},w)for(q in p)q in a||j(a,q,p[q]);else e(e.P+e.F*c.BUGGY,o,p)}},function(b,d,c){var a=c(58);b.exports=function(e){var c=a.assertDefined(this)+\"\",d=\"\",b=a.toInteger(e);if(0>b||b==1/0)throw RangeError(\"Count can't be negative\");for(;b>0;(b>>>=1)&&(c+=c))1&b&&(d+=c);return d}},function(b,e,c){var d=c(65).fn;b.exports=function(b,c,e){if(d(b),~e&&c===a)return b;switch(e){case 1:return function(a){return b.call(c,a)};case 2:return function(a,d){return b.call(c,a,d)};case 3:return function(a,d,e){return b.call(c,a,d,e)}}return function(){return b.apply(c,arguments)}}},function(e,g,f){function b(b){var c=b[\"return\"];c!==a&&d(c.call(b))}function c(e,c,a,f){try{return f?c(d(a)[0],a[1]):c(a)}catch(g){throw b(e),g}}var d=f(65).obj;c.close=b,e.exports=c},function(d,f,e){var a=e(73)(\"iterator\"),b=!1;try{var c=[7][a]();c[\"return\"]=function(){b=!0},Array.from(c,function(){throw 2})}catch(g){}d.exports=function(f){if(!b)return!1;var d=!1;try{var c=[7],e=c[a]();e.next=function(){d=!0},c[a]=function(){return e},f(c)}catch(g){}return d}},function(d,e,c){var a=c(58),b=c(73)(\"unscopables\");!a.FW||b in[]||a.hide(Array.prototype,b,{}),d.exports=function(c){a.FW&&([][b][c]=!0)}},function(d,e,b){var a=b(58),c=b(73)(\"species\");d.exports=function(b){!a.DESC||c in b||a.setDesc(b,c,{configurable:!0,get:a.that})}},function(c,f,a){var d=a(80),e=a(77).get,b=a(81);c.exports=function(g,c,h,i){for(var f,a=e(g),j=d(h,i,c?2:1);!(f=a.next()).done;)if(b(a,j,f.value,c)===!1)return b.close(a)}},function(a,d,b){var c=b(69);a.exports=function(a,b){for(var d in b)c(a,d,b[d]);return a}},function(x,y,c){function f(){var a=+this;if(g.has(d,a)){var b=d[a];delete d[a],b()}}function s(a){f.call(a.data)}var b,l,i,g=c(58),h=c(80),w=c(60),v=c(62),n=c(59),a=g.g,e=g.isFunction,p=g.html,q=a.process,m=a.setImmediate,k=a.clearImmediate,t=a.postMessage,u=a.addEventListener,r=a.MessageChannel,j=0,d={},o=\"onreadystatechange\";e(m)&&e(k)||(m=function(a){for(var c=[],f=1;arguments.length>f;)c.push(arguments[f++]);return d[++j]=function(){v(e(a)?a:Function(a),c)},b(j),j},k=function(a){delete d[a]},\"process\"==w(q)?b=function(a){q.nextTick(h(f,a,1))}:u&&e(t)&&!a.importScripts?(b=function(a){t(a,\"*\")},u(\"message\",s,!1)):e(r)?(l=new r,i=l.port2,l.port1.onmessage=s,b=h(i.postMessage,i,1)):b=o in n(\"script\")?function(a){p.appendChild(n(\"script\"))[o]=function(){p.removeChild(this),f.call(a)}}:function(a){setTimeout(h(f,a,1),0)}),x.exports={set:m,clear:k}},function(t,x,c){function m(a,b){if(!p(a))return\"symbol\"==typeof a?a:(\"string\"==typeof a?\"S\":\"P\")+a;if(!q(a,l)){if(!v(a))return\"F\";if(!b)return\"E\";u(a,l,++w)}return\"O\"+a[l]}function k(c,d){var a,e=m(d);if(\"F\"!==e)return c[h][e];for(a=c[b];a;a=a.n)if(a.k==d)return a}var d=c(58),r=c(80),e=c(64).safe,o=c(65),s=c(85),j=c(77).step,q=d.has,g=d.set,p=d.isObject,u=d.hide,v=Object.isExtensible||p,l=e(\"id\"),h=e(\"O1\"),f=e(\"last\"),b=e(\"first\"),n=e(\"iter\"),i=d.DESC?e(\"size\"):\"size\",w=0;t.exports={getConstructor:function(j,l,m){function e(){var c=o.inst(this,e,j),k=arguments[0];g(c,h,d.create(null)),g(c,i,0),g(c,f,a),g(c,b,a),k!=a&&s(k,l,c[m],c)}return c(86)(e.prototype,{clear:function(){for(var d=this,e=d[h],c=d[b];c;c=c.n)c.r=!0,c.p&&(c.p=c.p.n=a),delete e[c.i];d[b]=d[f]=a,d[i]=0},\"delete\":function(g){var c=this,a=k(c,g);if(a){var d=a.n,e=a.p;delete c[h][a.i],a.r=!0,e&&(e.n=d),d&&(d.p=e),c[b]==a&&(c[b]=d),c[f]==a&&(c[f]=e),c[i]--}return!!a},forEach:function(c){for(var a,d=r(c,arguments[1],3);a=a?a.n:this[b];)for(d(a.v,a.k,this);a&&a.r;)a=a.p},has:function(a){return!!k(this,a)}}),d.DESC&&d.setDesc(e.prototype,\"size\",{get:function(){return o.def(this[i])}}),e},def:function(c,e,l){var g,j,d=k(c,e);return d?d.v=l:(c[f]=d={i:j=m(e,!0),k:e,v:l,p:g=c[f],n:a,r:!1},c[b]||(c[b]=d),g&&(g.n=d),c[i]++,\"F\"!==j&&(c[h][j]=d)),c},getEntry:k,setIter:function(e,f,d){c(78)(e,f,function(a,b){g(this,n,{o:a,k:b})},function(){for(var d=this[n],e=d.k,c=d.l;c&&c.r;)c=c.p;return d.o&&(d.l=c=c?c.n:d.o[b])?\"keys\"==e?j(0,c.k):\"values\"==e?j(0,c.v):j(0,[c.k,c.v]):(d.o=a,j(1))},d?\"entries\":\"values\",!d,!0)}}},function(f,j,b){var c=b(58),d=b(61),g=b(77).BUGGY,h=b(85),e=b(84),i=b(65).inst;f.exports=function(j,u,t,l,n){function o(a,d){if(c.FW){var e=k[a];b(69)(k,a,function(a,b){var c=e.call(this,0===a?0:a,b);return d?this:c})}}var p=c.g[j],f=p,m=l?\"set\":\"add\",k=f&&f.prototype,s={};if(c.isFunction(f)&&(n||!g&&k.forEach&&k.entries)){var r,q=new f,v=q[m](n?{}:-0,1);b(82)(function(a){new f(a)})||(f=function(){i(this,f,j);var b=new p,c=arguments[0];return c!=a&&h(c,l,b[m],b),b},f.prototype=k,c.FW&&(k.constructor=f)),n||q.forEach(function(b,a){r=1/a===-(1/0)}),r&&(o(\"delete\"),o(\"has\"),l&&o(\"get\")),(r||v!==q)&&o(m,!0)}else f=t.getConstructor(j,l,m),b(86)(f.prototype,u);return b(60).set(f,j),s[j]=f,d(d.G+d.W+d.F*(f!=p),s),e(f),e(c.core[j]),n||t.setIter(f,j,l),f}},function(r,u,c){function j(a,b){return p(a.array,function(a){return a[0]===b})}function f(b){return b[h]||m(b,h,{array:[],get:function(c){var b=j(this,c);return b?b[1]:a},has:function(a){return!!j(this,a)},set:function(a,b){var c=j(this,a);c?c[1]=b:this.array.push([a,b])},\"delete\":function(b){var a=t(this.array,function(a){return a[0]===b});return~a&&this.array.splice(a,1),!!~a}})[h]}var g=c(58),l=c(64).safe,n=c(65),q=c(85),e=g.has,i=g.isObject,m=g.hide,k=Object.isExtensible||i,s=0,d=l(\"id\"),b=l(\"weak\"),h=l(\"leak\"),o=c(63),p=o(5),t=o(6);r.exports={getConstructor:function(j,l,m){function h(){g.set(n.inst(this,h,j),d,s++);var b=arguments[0];b!=a&&q(b,l,this[m],this)}return c(86)(h.prototype,{\"delete\":function(a){return i(a)?k(a)?e(a,b)&&e(a[b],this[d])&&delete a[b][this[d]]:f(this)[\"delete\"](a):!1},has:function(a){return i(a)?k(a)?e(a,b)&&e(a[b],this[d]):f(this).has(a):!1}}),h},def:function(c,a,g){return k(n.obj(a))?(e(a,b)||m(a,b,{}),a[b][c[d]]=g):f(c).set(a,g),c},leakStore:f,WEAK:b,ID:d}},function(c,e,a){var b=a(58),d=a(65).obj;c.exports=function(a){d(a);var c=b.getNames(a),e=b.getSymbols;return e?c.concat(e(a)):c}},function(d,f,b){var c=b(58),e=b(79);d.exports=function(k,g,h,i){var f=c.assertDefined(k)+\"\";if(g===a)return f;var l=c.toInteger(g),d=l-f.length;if(0>d||d===1/0)throw new RangeError(\"Cannot satisfy string length \"+g+\" for string: \"+f);var j=h===a?\" \":h+\"\",b=e.call(j,Math.ceil(d/j.length));return b.length>d&&(b=i?b.slice(b.length-d):b.slice(0,d)),i?b.concat(f):f.concat(b)}},function(c,e,a){var b=a(61),d=a(85);c.exports=function(a){b(b.P,a,{toJSON:function(){var a=[];return d(this,!1,a.push,a),a}})}},function(c,f,a){var d=a(58),b=a(62),e=a(65).fn;c.exports=function(){for(var h=e(this),a=arguments.length,c=Array(a),f=0,i=d.path._,g=!1;a>f;)(c[f]=arguments[f++])===i&&(g=!0);return function(){var d,j=this,k=arguments.length,e=0,f=0;if(!g&&!k)return b(h,c,j);if(d=c.slice(),g)for(;a>e;e++)d[e]===i&&(d[e]=arguments[f++]);for(;k>f;)d.push(arguments[f++]);return b(h,d,j)}}},function(a){a.exports=function(a){return a.FW=!1,a.path=a.core,a}}]),\"undefined\"!=typeof module&&module.exports?module.exports=b:\"function\"==typeof define&&define.amd?define(function(){return b}):c.core=b}();\n//# sourceMappingURL=library.min.js.map",
            "binary": false,
            "copies": 256,
            "sample_repo_name": "jsdelivr/jsdelivr",
            "sample_ref": "refs/heads/master",
            "sample_path": "files/core-js/0.9.12/library.min.js",
            "sample_mode": 33188,
            "sample_symlink_target": null
        },
        {
            "id": "9eb0c3299f21b4d86029ebbbf0b6ad8c0945b35d",
            "size": 3144,
            "content": "<?php\n/*\nV5.19  23-Apr-2014  (c) 2000-2014 John Lim (jlim#natsoft.com). All rights reserved.\n  Released under both BSD license and Lesser GPL library license.\n  Whenever there is any discrepancy between the two licenses,\n  the BSD license will take precedence. See License.txt.\n  Set tabs to 4 for best viewing.\n\n  Latest version is available at http://adodb.sourceforge.net\n\n  Library for basic performance monitoring and tuning\n\n*/\n\n// security - hide paths\nif (!defined('ADODB_DIR')) die();\n\n// Simple guide to configuring db2: so-so http://www.devx.com/gethelpon/10MinuteSolution/16575\n\n// SELECT * FROM TABLE(SNAPSHOT_APPL('SAMPLE', -1)) as t\nclass perf_db2 extends adodb_perf{\n\tvar $createTableSQL = \"CREATE TABLE adodb_logsql (\n\t\t  created TIMESTAMP NOT NULL,\n\t\t  sql0 varchar(250) NOT NULL,\n\t\t  sql1 varchar(4000) NOT NULL,\n\t\t  params varchar(3000) NOT NULL,\n\t\t  tracer varchar(500) NOT NULL,\n\t\t  timer decimal(16,6) NOT NULL\n\t\t)\";\n\n\tvar $settings = array(\n\t'Ratios',\n\t\t'data cache hit ratio' => array('RATIO',\n\t\t\t\"SELECT\n\t\t\t\tcase when sum(POOL_DATA_L_READS+POOL_INDEX_L_READS)=0 then 0\n\t\t\t\telse 100*(1-sum(POOL_DATA_P_READS+POOL_INDEX_P_READS)/sum(POOL_DATA_L_READS+POOL_INDEX_L_READS)) end\n\t\t\t\tFROM TABLE(SNAPSHOT_APPL('',-2)) as t\",\n\t\t\t'=WarnCacheRatio'),\n\n\t'Data Cache',\n\t\t'data cache buffers' => array('DATAC',\n\t\t'select sum(npages) from SYSCAT.BUFFERPOOLS',\n\t\t\t'See <a href=http://www7b.boulder.ibm.com/dmdd/library/techarticle/anshum/0107anshum.html#bufferpoolsize>tuning reference</a>.' ),\n\t\t'cache blocksize' => array('DATAC',\n\t\t'select avg(pagesize) from SYSCAT.BUFFERPOOLS',\n\t\t\t'' ),\n\t\t'data cache size' => array('DATAC',\n\t\t'select sum(npages*pagesize) from SYSCAT.BUFFERPOOLS',\n\t\t\t'' ),\n\t'Connections',\n\t\t'current connections' => array('SESS',\n\t\t\t\"SELECT count(*) FROM TABLE(SNAPSHOT_APPL_INFO('',-2)) as t\",\n\t\t\t''),\n\n\t\tfalse\n\t);\n\n\n\tfunction perf_db2(&$conn)\n\t{\n\t\t$this->conn = $conn;\n\t}\n\n\tfunction Explain($sql,$partial=false)\n\t{\n\t\t$save = $this->conn->LogSQL(false);\n\t\tif ($partial) {\n\t\t\t$sqlq = $this->conn->qstr($sql.'%');\n\t\t\t$arr = $this->conn->GetArray(\"select distinct sql1 from adodb_logsql where sql1 like $sqlq\");\n\t\t\tif ($arr) {\n\t\t\t\tforeach($arr as $row) {\n\t\t\t\t\t$sql = reset($row);\n\t\t\t\t\tif (crc32($sql) == $partial) break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$qno = rand();\n\t\t$ok = $this->conn->Execute(\"EXPLAIN PLAN SET QUERYNO=$qno FOR $sql\");\n\t\tob_start();\n\t\tif (!$ok) echo \"<p>Have EXPLAIN tables been created?</p>\";\n\t\telse {\n\t\t\t$rs = $this->conn->Execute(\"select * from explain_statement where queryno=$qno\");\n\t\t\tif ($rs) rs2html($rs);\n\t\t}\n\t\t$s = ob_get_contents();\n\t\tob_end_clean();\n\t\t$this->conn->LogSQL($save);\n\n\t\t$s .= $this->Tracer($sql);\n\t\treturn $s;\n\t}\n\n\t/**\n\t *  Gets a list of tables\n\t *\n\t * @param int $throwaway discarded variable to match the parent method\n\t * @return string The formatted table list\n\t */\n\tfunction Tables($throwaway=0)\n\t{\n\t\t$rs = $this->conn->Execute(\"select tabschema,tabname,card as rows,\n\t\t\tnpages pages_used,fpages pages_allocated, tbspace tablespace\n\t\t\tfrom syscat.tables where tabschema not in ('SYSCAT','SYSIBM','SYSSTAT') order by 1,2\");\n\t\treturn rs2html($rs,false,false,false,false);\n\t}\n}\n",
            "binary": false,
            "copies": 256,
            "sample_repo_name": "happyman/twmap",
            "sample_ref": "refs/heads/master",
            "sample_path": "twmap_gen/lib/adodb5/perf/perf-db2.inc.php",
            "sample_mode": 33188,
            "sample_symlink_target": null
        },
        {
            "id": "816b2d7412b432d86a4a36147255ec664f760193",
            "size": 3974,
            "content": "/*\n *  linux/drivers/devfreq/governor_simpleondemand.c\n *\n *  Copyright (C) 2011 Samsung Electronics\n *\tMyungJoo Ham <myungjoo.ham@samsung.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n */\n\n#include <linux/errno.h>\n#include <linux/module.h>\n#include <linux/devfreq.h>\n#include <linux/math64.h>\n#include \"governor.h\"\n\n/* Default constants for DevFreq-Simple-Ondemand (DFSO) */\n#define DFSO_UPTHRESHOLD\t(90)\n#define DFSO_DOWNDIFFERENCTIAL\t(10)\nstatic int devfreq_simple_ondemand_func(struct devfreq *df,\n\t\t\t\t\tunsigned long *freq,\n\t\t\t\t\tu32 *flag)\n{\n\tstruct devfreq_dev_status stat;\n\tint err;\n\tunsigned long long a, b;\n\tunsigned int dfso_upthreshold = DFSO_UPTHRESHOLD;\n\tunsigned int dfso_downdifferential = DFSO_DOWNDIFFERENCTIAL;\n\tstruct devfreq_simple_ondemand_data *data = df->data;\n\tunsigned long max = (df->max_freq) ? df->max_freq : UINT_MAX;\n\tunsigned long min = (df->min_freq) ? df->min_freq : 0;\n\n\tstat.private_data = NULL;\n\n\terr = df->profile->get_dev_status(df->dev.parent, &stat);\n\tif (err)\n\t\treturn err;\n\n\tif (data) {\n\t\tif (data->upthreshold)\n\t\t\tdfso_upthreshold = data->upthreshold;\n\t\tif (data->downdifferential)\n\t\t\tdfso_downdifferential = data->downdifferential;\n\t}\n\tif (dfso_upthreshold > 100 ||\n\t    dfso_upthreshold < dfso_downdifferential)\n\t\treturn -EINVAL;\n\n\t/* Prevent overflow */\n\tif (stat.busy_time >= (1 << 24) || stat.total_time >= (1 << 24)) {\n\t\tstat.busy_time >>= 7;\n\t\tstat.total_time >>= 7;\n\t}\n\n\tif (data && data->simple_scaling) {\n\t\tif (stat.busy_time * 100 >\n\t\t    stat.total_time * dfso_upthreshold)\n\t\t\t*freq = max;\n\t\telse if (stat.busy_time * 100 <\n\t\t\t stat.total_time *\n\t\t\t (dfso_upthreshold - dfso_downdifferential))\n\t\t\t*freq = min;\n\t\telse\n\t\t\t*freq = df->previous_freq;\n\t\treturn 0;\n\t}\n\n\t/* Assume MAX if it is going to be divided by zero */\n\tif (stat.total_time == 0) {\n\t\t*freq = max;\n\t\treturn 0;\n\t}\n\n\t/* Set MAX if it's busy enough */\n\tif (stat.busy_time * 100 >\n\t    stat.total_time * dfso_upthreshold) {\n\t\t*freq = max;\n\t\treturn 0;\n\t}\n\n\t/* Set MAX if we do not know the initial frequency */\n\tif (stat.current_frequency == 0) {\n\t\t*freq = max;\n\t\treturn 0;\n\t}\n\n\t/* Keep the current frequency */\n\tif (stat.busy_time * 100 >\n\t    stat.total_time * (dfso_upthreshold - dfso_downdifferential)) {\n\t\t*freq = stat.current_frequency;\n\t\treturn 0;\n\t}\n\n\t/* Set the desired frequency based on the load */\n\ta = stat.busy_time;\n\ta *= stat.current_frequency;\n\tb = div_u64(a, stat.total_time);\n\tb *= 100;\n\tb = div_u64(b, (dfso_upthreshold - dfso_downdifferential / 2));\n\t*freq = (unsigned long) b;\n\n\tif (df->min_freq && *freq < df->min_freq)\n\t\t*freq = df->min_freq;\n\tif (df->max_freq && *freq > df->max_freq)\n\t\t*freq = df->max_freq;\n\n\treturn 0;\n}\n\nstatic int devfreq_simple_ondemand_handler(struct devfreq *devfreq,\n\t\t\t\tunsigned int event, void *data)\n{\n\tswitch (event) {\n\tcase DEVFREQ_GOV_START:\n\t\tdevfreq_monitor_start(devfreq);\n\t\tbreak;\n\n\tcase DEVFREQ_GOV_STOP:\n\t\tdevfreq_monitor_stop(devfreq);\n\t\tbreak;\n\n\tcase DEVFREQ_GOV_INTERVAL:\n\t\tdevfreq_interval_update(devfreq, (unsigned int *)data);\n\t\tbreak;\n\n\tcase DEVFREQ_GOV_SUSPEND:\n\t\tdevfreq_monitor_suspend(devfreq);\n\t\tbreak;\n\n\tcase DEVFREQ_GOV_RESUME:\n\t\tdevfreq_monitor_resume(devfreq);\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n\n\treturn 0;\n}\n\nstatic struct devfreq_governor devfreq_simple_ondemand = {\n\t.name = \"simple_ondemand\",\n\t.get_target_freq = devfreq_simple_ondemand_func,\n\t.event_handler = devfreq_simple_ondemand_handler,\n};\n\nstatic int __init devfreq_simple_ondemand_init(void)\n{\n\treturn devfreq_add_governor(&devfreq_simple_ondemand);\n}\nsubsys_initcall(devfreq_simple_ondemand_init);\n\nstatic void __exit devfreq_simple_ondemand_exit(void)\n{\n\tint ret;\n\n\tret = devfreq_remove_governor(&devfreq_simple_ondemand);\n\tif (ret)\n\t\tpr_err(\"%s: failed remove governor %d\\n\", __func__, ret);\n\n\treturn;\n}\nmodule_exit(devfreq_simple_ondemand_exit);\nMODULE_LICENSE(\"GPL\");\n",
            "binary": false,
            "copies": 1,
            "sample_repo_name": "garwedgess/android_kernel_lge_g4",
            "sample_ref": "refs/heads/M",
            "sample_path": "drivers/devfreq/governor_simpleondemand.c",
            "sample_mode": 33188,
            "sample_symlink_target": null
        },
        {
            "id": "ca151cab87aa4ba9286dd5b3557fd75bb902c442",
            "size": 3025,
            "content": "@import url(\"default.css\");\n\nbody {\n    background-color: white;\n    margin-left: 1em;\n    margin-right: 1em;\n}\n\ndiv.related {\n    margin-bottom: 1.2em;\n    padding: 0.5em 0;\n    border-top: 1px solid #ccc;\n    margin-top: 0.5em;\n}\n\ndiv.related a:hover {\n    color: #0095C4;\n}\n\ndiv.related:first-child {\n    border-top: 0;\n    border-bottom: 1px solid #ccc;\n}\n\ndiv.sphinxsidebar {\n    background-color: #f7f7f7;\n    border-radius: 5px;\n    line-height: 130%;\n    font-size: smaller;\n}\n\ndiv.sphinxsidebar h3 {\n    margin-top: 1em;\n    border-top: 4px solid #dfdfdf;\n    padding-top: 1em\n}\n\ndiv.sphinxsidebar h4 {\n    margin-top: 1.5em;\n}\n\ndiv.sphinxsidebarwrapper > h3:first-child {\n    margin-top: 0.2em;\n}\n\ndiv.sphinxsidebarwrapper > ul > li > ul > li {\n    margin-bottom: 0.4em;\n}\n\ndiv.sphinxsidebar a:hover {\n    color: #0095C4;\n}\n\ndiv.sphinxsidebar input {\n    font-family: 'Lucida Grande',Arial,sans-serif;\n    border: 1px solid #999999;\n    font-size: smaller;\n    border-radius: 3px;\n}\n\ndiv.sphinxsidebar input[type=text] {\n    max-width: 150px;\n}\n\ndiv#sidebarbutton {\n    background-color: #CCCCCC;\n    border-radius: 0px 5px 5px 0px;\n    color: #000000!important;\n}\n\ndiv.body {\n    padding: 0 0 0 1.2em;\n}\n\ndiv.body p {\n    line-height: 140%;\n}\n\ndiv.body h1, div.body h2, div.body h3, div.body h4, div.body h5, div.body h6 {\n    margin: 0;\n    border: 0;\n    padding: 0.3em 0;\n}\n\ndiv.body hr {\n    border: 0;\n    background-color: #ccc;\n    height: 1px;\n}\n\ndiv.body pre {\n    border-radius: 3px;\n    border: 1px solid #ac9;\n}\n\ndiv.body div.admonition, div.body div.impl-detail {\n    border-radius: 3px;\n    background-color: #ffe4e4;\n    border-color: #f66;\n}\n\ndiv.body div.impl-detail > p {\n    margin: 0;\n}\n\ndiv.body div.seealso {\n    border: 1px solid #dddd66;\n}\n\ndiv.body a {\n    color: #0067AB;\n}\n\ndiv.body a:visited {\n    color: #0067AB;\n}\n\ndiv.body a:hover {\n    color: #00AB67;\n}\n\ntt, code, pre {\n    font-family: monospace, sans-serif;\n    font-size: 96.5%;\n}\n\ndiv.body tt, div.body code {\n    border-radius: 3px;\n}\n\ndiv.body tt.descname, div.body code.descname {\n    font-size: 120%;\n}\n\ndiv.body tt.xref, div.body a tt, div.body code.xref, div.body a code {\n    font-weight: normal;\n}\n\n.deprecated {\n    border-radius: 3px;\n}\n\ntable.docutils {\n    border: 1px solid #ddd;\n    min-width: 20%;\n    border-radius: 3px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n}\n\ntable.docutils td, table.docutils th {\n    border: 1px solid #ddd !important;\n    border-radius: 3px;\n}\n\ntable p, table li {\n    text-align: left !important;\n}\n\ntable.docutils th {\n    background-color: #eee;\n    padding: 0.3em 0.5em;\n}\n\ntable.docutils td {\n    background-color: white;\n    padding: 0.3em 0.5em;\n}\n\ntable.footnote, table.footnote td {\n    border: 0 !important;\n}\n\ndiv.footer {\n    line-height: 150%;\n    margin-top: -2em;\n    text-align: right;\n    width: auto;\n    margin-right: 10px;\n}\n\ndiv.footer a:hover {\n    color: #0095C4;\n}\n\n.refcount {\n    color: #060;\n}\n\n.stableabi {\n    color: #229;\n}\np.logo {\n    margin: 0;\n}\n",
            "binary": false,
            "copies": 1,
            "sample_repo_name": "nigelsmall/py2neo",
            "sample_ref": "refs/heads/v3",
            "sample_path": "book/_themes/pydoctheme/static/pydoctheme.css",
            "sample_mode": 33188,
            "sample_symlink_target": null
        }
    ]
}